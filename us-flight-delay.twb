<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Airline_Delay_Cause (flight)' inline='true' name='federated.0num58h1uvyf7012ose8l1kzxsse' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flight' name='excel-direct.0bqtdjo1te887818zx1p810kjseq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/buyuksel2023/Desktop/flight.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bqtdjo1te887818zx1p810kjseq' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='Date_' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_flights' ordinal='9' />
            <column datatype='integer' name='arr_del15' ordinal='10' />
            <column datatype='real' name='carrier_ct' ordinal='11' />
            <column datatype='real' name='weather_ct' ordinal='12' />
            <column datatype='real' name='nas_ct' ordinal='13' />
            <column datatype='real' name='security_ct' ordinal='14' />
            <column datatype='real' name='late_aircraft_ct' ordinal='15' />
            <column datatype='integer' name='arr_cancelled' ordinal='16' />
            <column datatype='integer' name='arr_diverted' ordinal='17' />
            <column datatype='integer' name='arr_delay' ordinal='18' />
            <column datatype='integer' name='carrier_delay' ordinal='19' />
            <column datatype='integer' name='weather_delay' ordinal='20' />
            <column datatype='integer' name='nas_delay' ordinal='21' />
            <column datatype='integer' name='security_delay' ordinal='22' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bqtdjo1te887818zx1p810kjseq' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='Date_' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='airport_name' ordinal='8' />
            <column datatype='integer' name='arr_flights' ordinal='9' />
            <column datatype='integer' name='arr_del15' ordinal='10' />
            <column datatype='real' name='carrier_ct' ordinal='11' />
            <column datatype='real' name='weather_ct' ordinal='12' />
            <column datatype='real' name='nas_ct' ordinal='13' />
            <column datatype='real' name='security_ct' ordinal='14' />
            <column datatype='real' name='late_aircraft_ct' ordinal='15' />
            <column datatype='integer' name='arr_cancelled' ordinal='16' />
            <column datatype='integer' name='arr_diverted' ordinal='17' />
            <column datatype='integer' name='arr_delay' ordinal='18' />
            <column datatype='integer' name='carrier_delay' ordinal='19' />
            <column datatype='integer' name='weather_delay' ordinal='20' />
            <column datatype='integer' name='nas_delay' ordinal='21' />
            <column datatype='integer' name='security_delay' ordinal='22' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>Date_</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_flights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_flights]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_flights</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_del15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_del15]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_del15</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_ct]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_ct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_ct]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>weather_ct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_ct]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>nas_ct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_ct]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>security_ct</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_ct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_ct]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>late_aircraft_ct</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_cancelled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_cancelled]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_cancelled</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_diverted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_diverted]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_diverted</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Airline_Delay_Cause]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_197032484844236800]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Airline_Delay_Cause' datatype='table' name='[__tableau_internal_object_id__].[Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Cancelled' datatype='integer' name='[arr_cancelled]' role='measure' type='quantitative' />
      <column caption='Arr Del15' datatype='integer' name='[arr_del15]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Arr Diverted' datatype='integer' name='[arr_diverted]' role='measure' type='quantitative' />
      <column caption='Arr Flights' datatype='integer' name='[arr_flights]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Ct' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Late Aircraft Ct' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Ct' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Ct' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Ct' datatype='real' name='[weather_ct]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Date_' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_flights' />
        <field-sort-custom-order field='arr_del15' />
        <field-sort-custom-order field='carrier_ct' />
        <field-sort-custom-order field='weather_ct' />
        <field-sort-custom-order field='nas_ct' />
        <field-sort-custom-order field='security_ct' />
        <field-sort-custom-order field='late_aircraft_ct' />
        <field-sort-custom-order field='arr_cancelled' />
        <field-sort-custom-order field='arr_diverted' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_197032484844236800' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airline_Delay_Cause' id='Airline!Delay!Cause_C8F2F4484EF84B06BAF7E32330918424'>
            <properties context=''>
              <relation connection='excel-direct.0bqtdjo1te887818zx1p810kjseq' name='Airline_Delay_Cause' table='[Airline_Delay_Cause$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='Date_' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='airport_name' ordinal='8' />
                  <column datatype='integer' name='arr_flights' ordinal='9' />
                  <column datatype='integer' name='arr_del15' ordinal='10' />
                  <column datatype='real' name='carrier_ct' ordinal='11' />
                  <column datatype='real' name='weather_ct' ordinal='12' />
                  <column datatype='real' name='nas_ct' ordinal='13' />
                  <column datatype='real' name='security_ct' ordinal='14' />
                  <column datatype='real' name='late_aircraft_ct' ordinal='15' />
                  <column datatype='integer' name='arr_cancelled' ordinal='16' />
                  <column datatype='integer' name='arr_diverted' ordinal='17' />
                  <column datatype='integer' name='arr_delay' ordinal='18' />
                  <column datatype='integer' name='carrier_delay' ordinal='19' />
                  <column datatype='integer' name='weather_delay' ordinal='20' />
                  <column datatype='integer' name='nas_delay' ordinal='21' />
                  <column datatype='integer' name='security_delay' ordinal='22' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0num58h1uvyf7012ose8l1kzxsse'>
      <datasources>
        <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
      </datasources>
      <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
        <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
        <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
        <target field='[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_1102EBB13FB6451689258EAC8531EDB9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_099816472D83490A8742B7916FF23CA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_35D22884A23E4D99BE16D61310027BC0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier Delay Percentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
          </datasources>
          <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1102EBB13FB6451689258EAC8531EDB9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]' />
              <tooltip column='[federated.0num58h1uvyf7012ose8l1kzxsse].[attr:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]</rows>
        <cols>[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{7004F7BF-C65C-4054-B3A9-F8AABAD3D010}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
          </datasources>
          <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
            <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_197032484844236800]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_197032484844236800]' derivation='Avg' name='[avg:Calculation_197032484844236800:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_099816472D83490A8742B7916FF23CA8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1102EBB13FB6451689258EAC8531EDB9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[avg:Calculation_197032484844236800:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0num58h1uvyf7012ose8l1kzxsse].[avg:Calculation_197032484844236800:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0num58h1uvyf7012ose8l1kzxsse].[avg:Calculation_197032484844236800:qk]</rows>
        <cols>[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]</cols>
      </table>
      <simple-id uuid='{EC68A693-B50F-4881-ABE2-4D5B89E0CC30}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_099816472D83490A8742B7916FF23CA8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Latitude (generated)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Longitude (generated)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[Longitude (generated)]' field-type='quantitative' max='32847609.594636444' min='25744393.647189125' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[Latitude (generated)]' field-type='quantitative' max='7184023.8133692387' min='2266412.6425565807' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' />
              <color column='[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]' />
              <geometry column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' />
              <size column='[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]' />
              <lod column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' />
              <tooltip column='[federated.0num58h1uvyf7012ose8l1kzxsse].[attr:airport_name:nk]' />
              <lod column='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-transparency' value='162' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.0num58h1uvyf7012ose8l1kzxsse].[Latitude (generated)]</rows>
        <cols>[federated.0num58h1uvyf7012ose8l1kzxsse].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C6752216-5A8F-4BE9-B246-783664A8B538}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
          </datasources>
          <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column caption='Arr Cancelled' datatype='integer' name='[arr_cancelled]' role='measure' type='quantitative' />
            <column caption='Arr Del15' datatype='integer' name='[arr_del15]' role='measure' type='quantitative' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Arr Diverted' datatype='integer' name='[arr_diverted]' role='measure' type='quantitative' />
            <column caption='Arr Flights' datatype='integer' name='[arr_flights]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Ct' datatype='real' name='[carrier_ct]' role='measure' type='quantitative' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Late Aircraft Ct' datatype='real' name='[late_aircraft_ct]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Ct' datatype='real' name='[nas_ct]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Ct' datatype='real' name='[security_ct]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_cancelled]' derivation='Sum' name='[sum:arr_cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_del15]' derivation='Sum' name='[sum:arr_del15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_diverted]' derivation='Sum' name='[sum:arr_diverted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_flights]' derivation='Sum' name='[sum:arr_flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_ct]' derivation='Sum' name='[sum:carrier_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_ct]' derivation='Sum' name='[sum:late_aircraft_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_ct]' derivation='Sum' name='[sum:nas_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_ct]' derivation='Sum' name='[sum:security_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_ct]' derivation='Sum' name='[sum:weather_ct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Ct' datatype='real' name='[weather_ct]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_cancelled:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_del15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_diverted:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_flights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:carrier_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:late_aircraft_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:nas_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:security_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:weather_ct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_cancelled:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_del15:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_diverted:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_flights:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:carrier_ct:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:late_aircraft_ct:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:nas_ct:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:security_ct:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:weather_ct:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_099816472D83490A8742B7916FF23CA8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_1102EBB13FB6451689258EAC8531EDB9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[city]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (City,State)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[Action (Carrier)]</column>
            <column>[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='15' />
            <format attr='font-size' data-class='subtotal' value='12' />
            <format attr='font-size' data-class='total' value='15' />
            <format attr='text-align' value='center' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='center' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' value='14' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]' value='11' />
            <format attr='font-size' value='8' />
            <format attr='text-align' value='center' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='wrap' scope='rows' value='auto' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tableau Light' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0num58h1uvyf7012ose8l1kzxsse].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C80730A8-6970-45E1-B51C-DA92739A30D8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Airline_Delay_Cause (flight)' name='federated.0num58h1uvyf7012ose8l1kzxsse' />
      </datasources>
      <datasource-dependencies datasource='federated.0num58h1uvyf7012ose8l1kzxsse'>
        <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
        <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97550' id='24' param='vert' type-v2='layout-flow' w='98800' x='600' y='1225'>
            <zone h='5360' id='25' type-v2='title' w='98800' x='600' y='1225'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92190' id='22' param='vert' type-v2='layout-flow' w='98800' x='600' y='6585'>
              <zone h='92190' id='20' type-v2='layout-basic' w='98800' x='600' y='6585'>
                <zone h='86592' id='17' param='horz' type-v2='layout-flow' w='98800' x='600' y='12183'>
                  <zone h='86592' id='15' type-v2='layout-basic' w='98800' x='600' y='12183'>
                    <zone h='76822' id='7' param='horz' type-v2='layout-flow' w='98800' x='600' y='21953'>
                      <zone h='76822' id='5' type-v2='layout-basic' w='98800' x='600' y='21953'>
                        <zone h='76822' id='3' name='Map' w='49392' x='600' y='21953'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='38408' id='11' name='Carrier' w='49408' x='49992' y='21953'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='38414' id='13' name='Carrier Delay Percentage' w='49408' x='49992' y='60361'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='9770' id='14' name='Total Delay' show-title='false' w='98800' x='600' y='12183'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='5598' id='19' type-v2='layout-flow' w='98800' x='600' y='6585'>
                  <zone h='5598' id='18' name='Carrier Delay Percentage' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]' show-title='false' type-v2='filter' values='database' w='98800' x='600' y='6585'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontsize='14'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97550' id='26' param='vert' type-v2='layout-flow' w='98800' x='600' y='1225'>
                <zone h='5360' id='25' type-v2='title' w='98800' x='600' y='1225'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='9770' id='14' is-fixed='true' name='Total Delay' show-title='false' w='98800' x='600' y='12183'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76822' id='3' is-fixed='true' name='Map' w='49392' x='600' y='21953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38408' id='11' is-fixed='true' name='Carrier' w='49408' x='49992' y='21953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5598' id='18' name='Carrier Delay Percentage' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[tmn:Date_:qk]' show-title='false' type-v2='filter' values='database' w='98800' x='600' y='6585'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38414' id='13' is-fixed='true' name='Carrier Delay Percentage' w='49408' x='49992' y='60361'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{109B6D1A-7F57-4F1E-BAE2-2AC9CBA749FB}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[none:airport_name:nk]</field>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9FC2FC44-90E5-4F59-8FAB-16BA4B941C2A}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier:nk]</field>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7C2EEE9-1941-4659-9586-7438B6D9F50F}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[yr:Date_:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8ADBD1E3-9860-4114-B8E2-52A29AD9DB96}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0num58h1uvyf7012ose8l1kzxsse].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF51DA68-7430-49DB-B3C7-6BA23F756204}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0num58h1uvyf7012ose8l1kzxsse].[none:city:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A752875C-1899-47A6-ADFA-633DF6358C9E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAc52Hn/W/PfeOYwX0TJwGCFwgSvCSLpCRSshwdkeUkjuOsnXW8m9fJ
      5t2j8lZ2y5X4fXfLqWx5Y6+dyPGxOixaEilZIsWbEkQQBEiAOIn7Bgb3MRgMgDm73z9AQqRI
      kSAIkpDm+VSxijUzmHl6en7dz9VPS4qiKAhCmFI97AIIwsMkAiCEtQcSAEVRCIVCD+KjBOGu
      PLAzgCzLD+qjBGHJRBVICGsiAEJYEwEQwpoIgBDWRACEsCYCIIQ1EQAhrIkACGFNBEAIayIA
      QlgTARDCmgiAENZEAISwJgIghDURACGsiQAIYU0EQAhrIgBCWBMBEMKaCIAQ1kQAhLAmAiCE
      NREAIaxp7umvlRCXy0sZn4ONJTuItRqY6WuitG2YhLg0NhZmol6hggrC/XBvAfCPo7bnsyc/
      QPPEDLFWA1PT88TGxZGaGo9KUQhdXRBLlmWCweBKlFkQVsy9BUBSIYf8yLKCSiUBEJeZg97t
      oav5CtbiYnTSwuOSJKFSiRqXsLrcWwB0DnTz5zlXD0XbtjI4NIQmOENL1yDGyES0KgmVJKEo
      igiAsCpJD+L+AIqiEAwG0Wq19/ujBOGuiEOyENZEAISwJgIghDURACGsiQAIYU0E4D5RFIXD
      hw8zNDSELMu89dZbjI2NAdDf38/LL7/M8ePH6evr4+WXX6a6upqamhoOHjyIx+OhtbX1IW9B
      eBABuE/a29sZHx/H5XLR2trKyMgIs7OzANjtdv7oj/6I8fFxSktL+drXvkZnZyednZ04HA6q
      q6uJjo5+yFsQHkQA7gOv10tFRQUJCQmMjIxQUVFBYmIi09PTKIqCTqfj8OHDmM1m9u7dy29/
      +1uampooKChgfHwcj8fDz3/+c2prax/2pnzh3dtIsPCZEhMTaWlpITY2luTkZBoaGrDZbPT2
      9jI3N4fNZmN0dJSZmRnsdjtWq5WcnBwmJiaIjIykt7eXQCDwsDfjC0+MBN9Hfr8fSZLQarX4
      fD7UajXz8/NotVrGxsawWq0YjUbGxsaIiYlBp9Ph9XrR6/WMjo5it9vD7jt70EQAhLAm2gAP
      QSgkU9cxTIdz8mEXJeyJADwEDd2j/N3/+Zh/eKOcmTnfwy5OWBMBeAhm5xeuoTDqNWg14pq5
      h0n0Aq0Aj8fDmTNneOqppzh//jxZWVkkJyejKArNzc2cP3+effv20dfXx5WmFmonrUz2NBAp
      pTM6MoLVYiIqKuphb0ZYEmeAe6QoCuXl5fT29uL3+4mIiGB8fHzxeZPJxEsvvURdXR2FhYVE
      Jq+lp7WBl/YW0tHRyYWqWiIiIh7iFoQ39fe///3vP4gPkmUZtfruT/eKovDaa6/hdrvp7+/n
      zTffRKVSkZycjNfr5Ve/+hWNjY2kpKTwk5/8hK6uLmZnZ3n77bdJSEigsbGR1NTU+7BFCwYH
      B5mcnMTv97Np0yY0Gg0ej4f4+HgkSUKWZcrKynj00UfpGRjiv/3Dy/zR8/uJMato6BpG9s3S
      1dpAXl4eOp3utt9DU1MT09PTyLLMm2++SWpqKiaTiWAwyFtvvUVFRQVZWVmcOnWKlpYWoqOj
      ee+998jKyqKvr0+MLt/Cqj8DdHd3YzKZkGWZyclJ/uqv/orBwUEA+vr6sFgsFBcX43a7SUpK
      YteuXQSDQTIyMqipqUGSJFwu130r39zcHP39/VRWVtLR0UFdXR1NTU1MTk4yMTHBe++9R0RE
      BCMjoxw6VYU9IQ27zsv+J58gNTmJgcl57HY7Pt/tG8Ozs7OUlZXR19fHuXPnePrppzlx4sRi
      Gex2O9/+9reRZZmNGzditVo5ceIEubm5fPjhh8zNzd237+DzbNUH4JVXXqG9vZ3z58/z6SEL
      RVHQaDS0tLTgdrspKCigvLyc1NRUUlJSMBqNDAwMUFZWdt/Kl52dzTe/+U1+8IMfkJKSQkxM
      DHl5eYvXQO/YsQOj0Ujf2AxNg/N85/ldHNj/JFqthkd3laB1ZLF58+Y7Hp2rqqrYvn07KpUK
      g8FATEwMJpNp8fmmpiZ+/OMfo9VqmZycRKfT8cgjj1BTUwPAuXPnOHv27H37Hj6vllAF8vHG
      T/+RnnE/rV2T5GYlLuuDllsF2rFjB2vWrMHhcGA0Gjl06BDr169fPOLX1NQwMTHBmjVrKC8v
      x+fzsX37diYmJsjLy6O6upr4+HjWrFmzrHIvldFopHPIzZtlvSQkJJCTFofZZMJutxMbF8+v
      TraQlZ7IN7+yC51Oh1qtRqPRcLK6lxf2bsZs/OzqD8DFixe5ePEiHR0dxMbG4nK5mJ6eJjk5
      mUAggNVqJRQK4fF46OnpITMzk6SkJCIjI9FoNCiKgs/nIy8v775+D583SxgJnuXVn/wMt19P
      zNodfPVA0V1/SLiMBL96oo63S5vRadRkp0SzOTuBvDQHjV2jfFDRzt9/6zHS4iMXXz/t8fIf
      fnKCf/dsMVvy7nxg8fl8zM3NodVqqampYcuWLbhcLqKjo2loaECn05Gamsrly5eRJIni4mK8
      Xi/R0dE0NjaSkJBATEzM/fwKPneWEACZvvYrdPRPkZGTS0piLJqrawAt1f0MQEiWUUkSknR3
      ZVppgWCI//aLD9Fq1Bwoyaatf4KGrhGcYzPM+QIUpMfw9996DLX6xlrnf/3Fh6xJjOJPD2x8
      SCUPb0sYB5jl7IkLJGdFc/DX59jy5B/zePH961W5GzNzPn76bhXx0Wb++IkNi4tzPQwXmwfp
      HZnmf3xnH6lxEWwvWBgHuNQyyGun6ilem3jTjx9gQ1Yc1S1DyIqCapkhlmWF+s4R5v0Bthek
      3OumrBper5c33niDQCDA888/z7Fjx5BlmRdffBGTycSlS5e4cOECW7duxWaz0dTUxPPPP8/h
      w4ex2Wzk5+ej0+mIjY39zM9YQiNYi14XwuOZJzEzDd/07HXPKYwPtHOxtplA6JMTydzUIJ0D
      E/ew6UszMT1PeWM/Ry+0Mz79YHo5fD4fp06dQpZlqqurGRgYwBcIcqj0CtJkK++//TqnT5/m
      0qVL/PKXvyTdruXJbBVrIgK4XC4mJ2+c/5OX6mB4yoNrxrvsMrk8Xn74xnn+8eAFBkbd97qJ
      q4ZWq+XFF1/EbrfT09NDXFwcaWlpTExMoCgKk5OTfOMb32Dr1q0kJiZiMpnwer0YjUbcbjfd
      3d1ERETc1HlyvSUEwMD+rzxNYmoe+/Y9w5f3rf3kqZCHjkE/ayKhe+RqV6McoLmxlQn31D1u
      /p2NT89h1GvQqFV8WNONLN/fia2KolBZWcnly5eZn58nEAgwPDzMyUtduOf8/O8f/DVf/eqL
      aLVa0tLSOHDgACdPnkRSQnRe7SK1Wq03vGdeqoM5b4C+kelll+taFTCkKEy4vzjdnSqViurq
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy92ZMkR37n93GPM6/KOvu+0OhuoHENgMFwOCB3ZsnRysilabUr6W3XZGsy
      k8n0qH9A7/oT9CKTmfZBsjU9SNqXXR7iECTnIHEMgAa6gQYafVZ33ZV3xuV6yPSoyMiIzMiq
      zEZzTd+ZRmVmRLh7uPvP/Xe72NraUmEYopRCCEEelFK514pAP59Xx7TrSQghRu43DIMwDJFS
      sre3h23bhGHI0tJSZj36X17Z+t+i4Ps+pmkW7m8pJaZp4vs+QPy+x4UuO/036z6lFFLKuE8s
      yyKKIoIgQAiBbdtIKen1epnllMtlpJREUYRpmvHvQRDQ7XYnzishBP1+H8dxZpp/s8wl07Is
      LMvC87wRIrBtGxgMVhRFI5MiawKlf5NSHrth6XLSzyWf1/W4rovv+5RKJarVKnt7e5imGbc9
      WXYQBLl1Jwd7HkSQnGS6TM/zYsIt8pyGfkdg4rNF26QXvjwIIWg2m9Tr9bhfoiiK+9R1Xcrl
      Mr7v0+v1MvsrDEPK5TJKqXhOhWFIFEX0er3CbZ11LCYtcnrOKKUwdeGWZeH7fvxivu/HEyU9
      8aZN/izkEY9ujL4eRVFu2Vm7lP4eBAGu68aTXkpJt9vF8zzq9Xpcrl7RoijKbHP6t5MSQbK8
      5GBOKzdNtHrizQN6B9X9kBzfZF8bhhHvPvq35M5jmma8+ufB8zzCMBxZxZNjPo0AT/J+edDz
      SCmFNE0TwzBQSuE4DoZh0Ov1YmJIF5w1eFmV6QHLm2i6vGQZWQOcRWzJyaC/JwcuDEPq9Xo8
      QPv7+2NlSSkn7lJFMI2dSr9j0WfSz2e186TQ46hX9uTf9L+8hU8vkLqf86BZnV6vh+d58QJV
      LpcntrFIP+VxI0UghEBqPk4pFb9IcmvMIgLDMEZWjSIDpCdpkogmsVSzQE/6TqcDEK82hmFQ
      qVRiXjL5DukJkCxrlklaZOdLlj9tdSqC5OJyEqTHItkfup36b16dQRCM8PZZCIIA3/fp9/t0
      Oh3a7TZKKVzXnTh3ZpEH9fxKj1tW/yc/mzDgJ8vlMmEYjmxn6YHSlJu1E8w6sFkvlySIvFUn
      iSSR6s96VdIsnVKKer3O7u4u+l0ty4rfJ13eLNtulkwy7V79+bjb+0mJJ42stqRlLM2zp6EV
      D2EYYlkWQRCM7fiazTo8PIwnp2ma8T22beeyUEXGI4vFzHq3vAXdTN9YFGlNzCS2KO9zXuOK
      TP5JZesBK5VKtNttoijCcRz6/T5KKZaXl8c697gTa5pWK+uek0z+SeXOCj2pswg5LQ9k1ef7
      PmEYYtt2LC/o1T65EHU6nUyi0Jqk9LsV4SiylASTkDen4r2r2+1iWRaO4xBFUaxtSBeS7gSt
      pUlK1kUal5yASU3PrMibyFEU0e124xWqVCrFGphOp4PruhPLm3U3SD4/bZKehNhmWRySSGvy
      dHnT2jtNI9ZqtSiVSjExaUVEGIYEQZCprjUMI2aHqtUqQRDEmrF03ZPkx+RYTUOekiXeASqV
      Snyj5qWTPDscqQjzOi1N5XmCrUZykmXtIEWk+STxJX+Hoy06+Ztt23S7XXzfj1mhJM+b9d7T
      kMWKJctdBOZV7iSCmjTJdL9qpYlmfaIoiudSv9/PZZ306m8YxoiNI4ki8lXy3mn9nZ5vSimk
      /mJZVsyb5a3g6YmfpSGQUsZCclEBOauh04gnfX8W0gOny3Rdl3a7PXZvWrc+i3Ce1d5JwvS8
      efkimKQxyZPJ9CKSN7GklFSr1fi653mZ5evy9C7s+z62bSOEiHeNLBQl9CKLTXo3E0Igkxfh
      yPCVfIHkv7TKMS0LpIVk/ZvmEadR6CS1aRaSOuU0P5m3fQshqNVq7O3tjXRGuv1FMe2d8lbX
      40KrrueB9PsnoZTCsqwxFWmybk0gWqWpDVymacY7QbKutICtV/5SqXTs9lcqlREiLArHcRhZ
      nvVOkFy1k5MyqWpKsg15q0jWpEpvQel/s768VqWlCTPrXo0oijAMA9d12d/fz613nqt0su90
      2UWF/PSiIISgXC7HLFwRZC0G0/h73e6sNmmEYUir1RrR5HS7XcIwpNvtZpapCUlrj4QQmSxQ
      ESilYpYqb6fNYtld1x3sPOkbHccBiHW1Gtr/JClMmaYZ83J5GoM0i5QnMM+KpAEvDMO4HsMw
      xqyb6Q4BYi2R67o0Go1YM5S+77jCcBbS5R+3bNM0abVaMxPAcZCcWHnj5Xne2KKZVJ0mF7uk
      PKkNr8AIkWcpNSYhaeNJP5eew9p3yfd9ms3mgACCIIidmaSU2LaNaZr0+/1YitcqLl1oUs8u
      hIjVjFmryiQ2IE8DkWZhkh1kGMbI5E+XmdQqTRLWlVJjjmW6rnR7sjo3+cwkYTLr+Vnlo2Rb
      tKEyzW8vAnlsa9aqmmaHa7Ua7XY7JqLkNb0L6wVLl5ksL/l5loUyb75l+R+ZSikajcZIZ7qu
      S6lUink4z/PGhMZ056d9epLUnqdJSE6cpKU4eS1NUMlJnyTK5EtaloVS2U5v6YkahiFra2ts
      bW2xvLwcs4DJXSUPWQOWZguzkLdAZLEjeoUUQsTOZFkr3qKRfr/keCbZJD0P+v0+tVqNarXK
      4eFhJrusf9NjlvVes+5cWX2vWeQsmEKMaz96vR5BEGBZFqVSKX6pvIKUUjEPl/WSeQ1LIk0g
      kyYFkCmPJJ/Le+EsQgzDkPX1dba3t6lUKpTL5Ykdn7e7zYtVyqszj6c+KSa9g2EYBEEwslul
      5T+94yaf1VZhy7Ko1Wo0Go24rnTdnU4n0/csec80mKaJaZqx812y/XnEBUM7QK1WwzAMPM+L
      3aK1qkobyLSArF8uubo6jhMbMrJe8CTCZBZfrj+nV/M8Ypsml+jfTp8+Tb/fp9frxbLQNBx3
      0hftE03I8/IETdc9befSsRXTBOY0j6/nkG3bsYo9afmFIw3SJMNr0X7SHqflcplWqxU/XyqV
      Ju6YJhCrsaIoit0Fki+lC9CTXDcsaQxxXTf3RXQdWTx7+oV1vWlksU/p68ktNWtAsoT1dPm2
      bbO9vR0TgC4va/DzdqZJWOQuMQvS7GYehBC5Y5bm07Pq0EjLO1rzE4bhyOqft+BNg2Z5Xdel
      VqvlyhNpmMmb9Eo/qeLkKqEFmSRPnvfsJLYkfV9Ww5Pt0tJ8nhNVFEXYth0TbpZcMqn+Uqk0
      QjDJv9NQpP/SbTrJDqnLSgrvRZ8p8puUkmazGcsfeXXDOPFHUYTneXFcRrqedBTZJBmxCJKL
      NxBzNVrtmtU/I+Y3wzCo1WqxXrVIxA4MjBiamvN4ybSaa9ZVPnlN+5rkPZ9ctfRv2tJYJJTQ
      cRx6vV5snClKBHkTOY81TF4/CcrlcqwaLfJ+s9SnXRXSGp4idfi+P6IpzNq1J+E4C0Oa0KZx
      HWM7gNagaP/tIquZlBLXdUeEtDwhdpbOT+rz0xMmj4D0tbSnoY5J1Z0xaaW2LCvTLXwWrZC+
      P03EabZjHixRu92OI+GOgyRbmNeuSbvotDlSpN/yBPF5yY95GLMECyFiW0C9Xo/ZojT0bzq4
      WQefuK4bywQ60GYa/573m36JNC+pNRN55ep3SHbCtPjX5L3H7fRJkVSTVsH0v+MgzxJaFGm5
      bxJrktXOrO9p63ca6f6ZNk9mZYmKYGIoj+M4I0HxyRjhZEO0pqhUKsW7SBiGMQ+e7sxpA6Vl
      iaz7tEpr2g6QrlcbXPJWyTSLlTSG5WmbiiD5HsmBnrRaP29BeZrcotnHtKaoqNwxbReYtqPr
      BVkbP7W3sobjOLGX76SEB1nINUUKIeJVvVqtxs5sWc5uMBBAtIcfEJuck40sOrBpdietOtMd
      Ma2M9ITLE+TSaLfbdLvdY7Nu0zBtMsA4sZxUUJ6GvN1rWjuL9EuexTuLMNLfpZTUarVYnZrF
      kfT7fdrt9rEcBKfa4k3TxHGcMXfV9MTs9/vxim9ZVixQO46D4zi5ASgaRXeJdCTRNCRX30kZ
      J5LQK0pa8FvEFjyN9UvvHt8HZq13lr5K92+6nH6/H4+3/lytVsf8oLTGaVZMjmYeQu8Etm3T
      6XRiK18a7XY7TmRUKpXiiaRZD20MSb54+oXzriWv512b1uHJGNZkPWn+XCnF0tISrVaLSqUy
      wsNrTGr/NGQNep6MkPfcNH55Xlqm9HtPEuKT987yPpPa+WcffIBXrfH+9WvcuHoVz/NiD+B0
      PxxngSjkjSWEiHeCWq020QsxCALa7TaHh4f0er2YZdErat4Wm7dq5GkHjjOoyViHSZ2VFKKb
      zeZIdFva7TpvZS6yYk9ib/LiErKEy6y+OKlQrSGEGFMtZskCWQL/PHYsYVmsv/46dx8+xLbt
      eEGalomiKGYqRUoZ+3a0Wq0RQ1O6Q3T+F52UqtPpcHBwAAwmVaQUetiUUqjBBxBi8DcJvdoM
      P8edq5/T10YeGSWWeOUXw7tVIkHWsBQp5EhBgoEu+/DwEMu243alWSPdRpFou9Lvot8rAc/z
      sGwbqSdNov0jKyoK1FFZyXvyWIe4HxlfhTN3WKEfGm1HPA5C0Gw0BlqmZMtU8lGFYDguyWJz
      diEhBahRB8hkuzWkYRAOM5E8a7Vi58e0d+lJMDMZ6d1ACyZau9JoNMa2QJ0hAAbB0w8fPuT0
      6dP8v5/dwlhdje/LrSvxXwBFsRdOjCkoCL0+we5TLt64Ft8ThSHPvnvA2ZdfGr7X0fMj80P/
      PuoMe0IIaD9/fr6xu4dAsLS2MuOTArabx643vUh12x0ePdmmfvbc1Gqdl66ilEKWyuzt7RVK
      oDCLtu5Y+4gmAj35m81m/HuaJ9OBGysrK2xsbOC6LjcvXeCrvkdpdQ3LLB7UcVz4nQ5e2OPM
      1cvxb6Ef0Gk2R36bBYtSVU5TGeY9A9PbZNo2Ali/MGXizRFZu0Cv1WbnsMPypUuFngvDEMN1
      2dreZmN9PVMLmCcPTO2T4q8yDq0qrVarcY7ItEFGqUGU2YMHD9jd2+PDL28TttssuQ5+rQ5z
      JoBc3jPVD0V3k+eN4xDW87YbzIKstrnVChYRURggjWJTcOn8ef7ym2+Ibt3i0tISZcvilWvX
      qNguO3fv80T1qFUqXL54cSS74UIJIC5kyBL1ej3K5XKcDkMLbN1uF8dx+M2nn+G32/zBz37G
      53duj/P6C8JwLXgudf3/mI4oDIkgd/JnL2CC1WsDFvaw12Pf83jw139DybKRTpX+uXUiz+Pj
      Dz7grYsXuXrlSqG2zEeUHuKLO3doNRq8fPUqKysrsQrUMAzW19d59+arLNWX2T/Y5+GzZ1y8
      cXOe1U9AhsryhARxHKtw1vMnKWNmZCkYvgdIw8CQxrHYPQDLdcF14Z134h1fmzh9y+ZvvvwC
      KQSVcpmV1VWsCRqjuRLAXrvDM2lyePsOlzfWYwuy4zg0m03eeustVldX+V//zb/hYqVCZesp
      xpmzdCx7VAqdN0aEWq21mf5Yo9ul1etzbmU5v+hjDuL3geO0UilFsNnEWHaR5emW9KL9EQQ+
      KooQGdbbWVSo6fuscpmz7/6QX/36V7CyypKK+N3XX2djfT126Tk8PCSMIlZXVuZHAFEU0fZ9
      Shcv40URn289I9p8im0YVKXk7OlTfPr117y2scG7KLx+F3f7KW4U0LVs7q2uc+CWTkwI+Ua0
      o+tFTP0AYRThneAklqJ43kTU390i6nYpXSioAPBDiFQcKRcEwUiGcDjKEu37Pl4U8Wj/gFfP
      nskt0sxxssxC0pWikMerEKy8+0MMyyIKQ/7DrS94bXmZV29c58uvvuLrZgtbRbw0TwKQUlJx
      HA6jCGkYlM6eg6Gaq6cUX3W71MOQx3/9ASuGpFup0Bd99uwm616NV7c2+WrjDHvlypSaJr13
      3sqR7c04LSvDSqXC2jC6aNKKNI8JnDYeLYQghvphq74Ctfr45RwLs3V5oDYVwywhWsWtoYVO
      rZ0xgctrqxObUrdCVLeFqIwfY5VE0uI7i7u3MfT7kqbJ2o0b3Hn4kNsffkR5Y4PlM2cJ+n0e
      eF4xS3BR/Oi1m3jbW2O/CyGwSyVebjVYqtfpRoooCBCRxA0HWiBTKa7s72CkrK3pl05aIpPf
      05ZTpRSq3UDtb0M0YuJBqUE6FMO2aO7uTX2vRUzGPOtt1uc8FN3Jxp4zLaQ9HvM8jZCTOvik
      cU07Sup7DMPAnZKz6Ma6Qj35qnCbT2L0ElKycvkyq9ev4y4P2FnTcXBqtfkRgBCCC+fP89b6
      Kl67NXbdDXxq/R5Bt0u/2QDDxLHKlH0bFQ2ou9T3KHU78QqjVxvtAKeUiqOM9PVkOm5tfQYQ
      3Rbq1q9Qdz4kevItIi0IC8Glm6/w7P5D/P7i8+tkIc/9Y5oPTXoRmGd7kn/T0JkXtLOjDnYH
      YvcYfc80eFd+zM74NBlDFEWFYjmOg36jMd8dQAjB9StX6A4Po0jCDkNEGOI1mzj1ZcLAp99o
      EHne0OSvAIUd+PEKnfS/SefqScd5am1THEXme6B3j343U7YQQrB27gz7T5/lvs+sW6/GgG06
      nhtzmuXKc2eY3R1g8m6R5+CXrDtrx00T8jQC1ljbWKV7eDi92UrNVXullMLfesbblfJ8CQCg
      Ui5jZ0wYXxr0Wi0M18EqlRGGgbQT2+Sww3zDHOlcKSWnux3MhO+OnuSaMICxv9RXEZdeQZy+
      iLxwPbe9URTRbRZYiiYgc7BVSPj4FxAeP4mVZkmSgTzz8oGZ5sSnFxj9WzJljmZRdbyv/qdX
      6qKLhuPYmdxCul31Bw+pPstepJI47DzBDybnTlJRRPTkCX/8+uu89/bb81WDwiAQ5lSlzGEY
      IhMqrq5l0VSKSreH326jwgirVMJMxAn0DYPu8FxZSGRFkwIpjlIeJgcnD0JIxPmrgy/NJnmr
      X319nZ1HT9h/tsXK6VMj12ZRxY0TgSRafQfTGKSM1N6wSWjBcdDebJlgnvmAZkGy3uTRWDrn
      p16Mkvli9V/Nwma9cxLSNFH96RFczXNnUQV2lGl3KKXg2VP+xU9+l3p9oASY+w5gGAavnjuH
      10w5TwnBs2uv0PM8yraN5bo4K0dOWZEQ3F9eIxDjTdqp1AiGE37aiYRZUKhc7appW1x/7x0O
      nm2z8+jJsVfX5EqovVsj6RIM1ahaRvF9P15NtRyjf9N/wzCMr2vMQxA/SQlJXjxP/tDjUiSt
      JAzmiipA4JFloYaZKSaN/VL5HJaZnWZdKUW4+YQ/ee+9kQPU53/+JlCtVeltb4293DPP48MI
      2tUazupqvEP0DYO7qxtsVWuLMYhNmdNSSq68+Rr9TpfGznStUFHoFVNPGC2jaB16ms2Aoyzc
      ixByR1y9C/Lp+l4t/OoFyDTN2BtYO0bq9ClFBWHTlLjSY+oAnRAqivAfP+KfvvMOa6ur8XtH
      UTR/FghgZXmZeqfNk1/+Daff+xGmM2Bz3OUV1D/6GZ8LQdXr4wQ+nmHSsh1CKRdrDZ4CIQTn
      rr3End98hFNycasDe4RSirDVRDousmBMsYZOMaPL1/nw4Yi902yDnjCa1UgSyqIRhgODX8nO
      Vl2miSUde5uOvQBwDh9i9Q9pnXojt94rS1uc697isVqlLSbbDWBG+UcBKiIMAtydHf7z3/s9
      lmo1Op0Od+7epdfrcbi/vxgCqNVqGOUyGy9fx0jom4UQCMMgAhpuCTjeqSAzQSlkFBIV4SGl
      5PLrr/LgyztcefM17KF80nn4Lc6pszjrpwtXm6VSTK6KeoXPmuBFZJzjY3wChSrCDwNKzM8z
      16ucwi9NntSBKNHxLcI51qshooiVLx/hrDr85Pd/j8PDQ35763OetFvIWoX9b+5xZf3UYlgg
      gPfeeB355BFqxjQVaZR7OxjRkZ7+OOq/Ur+HaRR7VbdaoX5qndu//pCvP/yEfqdL7ZU3sddO
      TX5QRZT85ol9The74gtURgtt02TpmEcU5UGZDpE92aq/Ly7y0e5L9ER1ROCfB+vneX3uNZ6w
      1W/x/3zwC35x9zYH9Qr1q5cxHYeSNLh8+fJidgCAx48e0Wy3WT5h7Gal+4xIWoQzsh8xhKBd
      KkO3Mfw6mbcWQnD68iXWzp1l85vvCDwPt1KeWo1UEWXvkJ5Vpai4mTfZF+spOoc43TnJJ6Zl
      QxjGKv5+v4/rurHWDMYD7bX2Kd0v+r4wDDFNk26zwdKNy6xcHg+6kaZB+fpVPj3YWRwBhFFE
      2/NYOeEA7qwOeMh0jOlMkBI/wd8WGUDDNPG6XezS5HQuGpE02a1cKHTvpEm9CIvnSN1ziIuY
      VxsNy6S+VMHvdrFKJQzDwPf9kcRoybqklFjdPeqNe2yuvjViEU8aQZVSqEghjOx3dcplnOGh
      fgtjgdbX16mXyxz+9mN2PvstXquJ1549sDbZEVlWxyLP2W4Jf78xE+ukooh+txfLAfPEvFSt
      xypjTjvAvHDpxjUOv7sHHCkA0sfsJk+pDOwah7XLI/5HSaNozEoVbOLCdoA3Xn+dX3/+GSsX
      ziMdm6373yIsk45ToX7p8kJ4XVt1CbAISWkpDAM/EkRhiDE8C3naLtDv9li0ei4PRftmZlbp
      BQxbsF2HyPdGNGF5UEqBaROYGxhkZ7nQRGEaJjBd/lwYAZimyerpU1QvDdiC6qkNALbv3cPf
      28Rd3SASJscZFa/dRkURQb9H8+F9Qn8gJF+st2j0bQ57KU9HIegdHtBtXqc6DG6ZtoLaroM0
      pkctGX7A2s4OWwnf95PwyEXkgmnXJ7V35/HmqPNfHB8kUr+J1MdRVadKZH3R10dqTapGM8pU
      Qv+UfwBHEllu4pmuHFFE48ljgsN9zr752tRyF0YA0VAGqA6/CyGwoxZvbmzi7z/G4hTb6iLb
      4hJFiCD0+ux/9x1hr0O1VsG0BgcxX3z/dxAJleFyzkSJwohvP/x7Xn7zNSrL477waXi9HqEf
      EIURhpmfczI0DfbW1uJ31NCTJIxAinxLdBoDN+4OwnURE+o9DgQCyzSxsvT9avSDdiDPIzsp
      xBE7pQChHdaGT6mjp9Nl6O8RoMIIWeC412k7nL6+/+A+q/UqqzfeLbQrLowADMOgnrQBqJCz
      /ic4RoOG9HGiFhflV3iRy+aepPH4EX63g1NbonbuPIZpcfDwPoZQeN0+jmNx6eYr2K6DkRFN
      NG2FlIbk8jvv8Ojru1y6blKqTlbRNXb32bh4HmlInt67z9LaKuWl2viNQhAMJ1R6lfJ8SbNr
      UXZ8Ss7oKjcp8EV5PsKxIcHKzUPzolAsn95g4+L5E5UzLyiluPvZbdZezndWzH5u8FcIAQrk
      0JvY8zxEv8vahRuFy1oYASil8HwfZ8hCOKqJo9oIKXFcF+/wgAhw+h/jmG/y+vs/AiAMAja/
      uovhulx762auEHocVaFhWZTrdQ53dqcSQOj7RGHIwy+/QkURt+/e4+2f/zTTQJWenEeTWw1X
      /+ITVwiBsZofg1zk+RcFnhcipcA0s3Utjb19DnsBG+XpauYkVOggDY/lIOK0D6VosKsc9kO+
      9iOiIEQW3D0XygJ53pErsBqGpAgGxianUiYKQ7AuEjpHsamGaXLhtVeB0Yk1ifcrbh5XNLe3
      ufHum1NvPXP1CntPNgHB+oVzBL4/6Fh7/LC3PJhGRL3an8jgpWWMrJDEFxFFdqTNrTaVksX6
      WraRbWllmbJ8SGdvj/LqdFcIDWn0OecrznujakzHKrF06iWebR0QnFsr1NaFqUGjKCJMnAnQ
      FzV68mhlEwKEadEw83Xn6VX1pL7wncPGUH6YznNKKVm/cD7Oonb25Zd48OWdmeoTAqSY7uKk
      32mSf35RJMuaR5/psiadUZBXz+ULS7mTHwauJ6++8wbhs4fFAmOGWArHJz8M51QYctWo4IbF
      HP4WRgAwSIB01DrJU+sHNIxz+MKlK5Z5ar5JVxan/JOisbVNfWNt+o0ZKC/ViMKQfup0knlh
      Fi3P80bS7z/5WV/TLtx5afMnQRoGS6sreDP060aQP3FVGCGFoN4v1o6FsUD7+/vYKT47kCWe
      Wm/BMLsw8Nw8QJVSBJ0W9fXiAlIaV954jXuf3uL6e28DWVqf8Um6+c09OoeNVILY9DuPa0sy
      eyXdVyr9NaWyVaO1thsNLr7yclbJE5FMNajPWNCHYKfPUNaBMBOhFML3UZZ1rPEv52hNlVKg
      BllJ3HCclUyy0/rzwgjgydOnVNczVtuhevB5G2W6h42B4HsSghOCMAo53N6hvrE+cilvhX56
      7wGv/+RHuTGto1M0dS3jGSHEQB4JQ6zUsVNZgngSm99+h5Szq1aThsOk1TV9Emfh+ALfp/zb
      W7TfeROO4SuW0LCOly0EKIXiKM5CKUUUhFjCIJCDB7V1eWEEcHB4gHM+PzHS84Tf67F19y43
      f/zuicoxLZMLN66x/fAR3WaLM1ev5A76k6+/pVpfomRNV7lqTDPyaLT29gh7feob6zMZzpwZ
      tS3JdqUj8ZLuKVmW2ElQlkX73bfgmC7fDQMqORzOcI2nbR31SxiGGF6I0QsIVo5OLFooAfjB
      4jOqFcXuw0dceuVljDmcKlJdruNWytz98LecuXqFMAgAwdN732G7DipSdJotuq0W3UaDsFcs
      KP6w06FWKmEk/FvyiKC6ugqrs2uIjuNQmK3eHY1lmFlTJQQc40A7jWcWrAVgp15FCIGztMSz
      nW3uHPRYu3oZMfQelSWLlunjDNk57VW6MCHYi7IJYJImYSFQis7eHrUpmcq0liN5fljSRz0J
      0zSxSy5f//3HfPPxp3z4H/4Ct1ohDAe5LlfOnOLSa69w6Y2bNBIHbk9KZGUa5sRTVeYBXfIs
      mqEoikZOfA/DEBUGWI0nRGEYC8Q6J1NSQF4U+kJw1wFPjHJCCuibBg9Or9B1K9z79BZepxs7
      zumQTR3RJqVc3A7QC4LC8V5KDVJspB2i0lts2usPpm+5g8i4QeqTTEvuEEmtRjIHUXK71G63
      Qgguv3GTvSdPp1pVk3Wm255ExckWHGe1AHc9iWNGSDnuKJZGUb5dxynrCY4Kcb9E5R4AACAA
      SURBVPfv45XXiRjNFqfvm5YR4kQQ0DQFnxmKNX/ADimgJWHXEkTCpOys4pfL3PntLV5+7TqV
      5eU411RyzixsB/BTO4AbdjnfvocT9cbu1RNLd3Qy81v6HzD2fRKEEJx/4w2++exLeu18VVuS
      oNLJtvSKmbxmGMaxXAqKHix9XKT81kavpX43D33srf4wdWQ+dHaKuF+kSePce4TIsX4rmhFi
      HgiE4Jkt+NYV3HMF27YgSlRtuS6nXr3JwzvfDFnVcSxOBghHB3q5v8Na7ymetNlyR4/o0SsH
      MBIIriddVjqOImdF6bJLS7XBquS6uStqcqKnV/tkAHvWYcxZbrknxSxalSRce4YEsp0Qo69g
      ldylUC9M06DbepzDqueNvdZ3hJHPxtJ1TMehfvUat//uY85cOs/qubMj9y6EAIIgwEh5HO64
      p/GlzaE9zosnWZ+kgJVUuyUn4qxQkRqcMC6PtPDC94gMM9ZEpFmp5Hc9uNOTcc2ZZ58DQY0S
      /Gj7+qcchALmMGe/T0NdGiV7mUgdcQdWuczG62+ydec2VdfBTrhdLIQAdnZ2kKlQwkDa7Lr5
      WRXSRqXk35OcCauUIvA9DGOYaUEpyjtPMXs9AsumfeoMZCTjmrWOoirMeWLmXSIlNGIM/bO+
      L38jpRBq/iahkj3uTCgNg7UrVwiePMBZXY35wYXIAJvPnmFNEDifO5T2VQcZBJj9PiiF4fWR
      J8xacVSFwu/3Myd/9/F9Oo/uf2+rZBxGCmMGuXlO/lnLskI4vx+w3p9HpPJ0BAg2fTUiDM19
      B1BK8e397zCu5B+BOU8U5b/V8J7INAkcF7PfI7Id1IynVObJEFEQ8uCTTzn32qu41erRBaXo
      PPwOgNL5i8x7vZtJbbrglb5IqGkSUikML4Suh2gf0GrMLytfXvuCbnekfXMngG6vxyGKDXf8
      AIZ5I+mDUrTTFdBZP40MfCLTzMyTk1fXpN+laXDpB29hpqOtpGD57fdAjQUNxtBHDvm+P5I2
      MS2UZykAtLCujTsT5RS1eHZnFiLom4JHp2y+vr3PGz/7vYW2S+P+l3fotVrxIjV3Fmhvbw9z
      qTYSprgoHNfdVwGRZYMofsLKtHqEEJhOxmF/Cgy3jFEq567AabuDNjgljyPS+vWka7K+rm0o
      U9XCOv73uBbcgigsmwhBKAWW69DY2z9BhRHL/dtINf2gE9O26LWOspPMfQd48uwp5QmnKs4b
      89eUTP993u2QUuL7PpZlxSnT9YF0Sb263vGShif9r5D1VSkefPkVu082B8JwUjlUyEExeUNK
      lhh7WCAEnLv2EpX6hHPAhMC0Ldxj+inputrmeYqkum3u7nHhrbfi73MlAKUU97e2KF17aZ7F
      zgVjDsipVWqW1TB5b6h8Gv4my9bFE7VPW071BLeGcc+T7A4CCA8byFqVkGJq2rXz51g+vZHt
      TDlnGV0pxaOvv+X0pfNYjsPmt/cRAnzP56U3b+IM0zF2223sk7DMQuAbxZQu9fV1DjafsnZx
      EIg19x3AlHJw/utzYIFOivSqnUUE0whDYFAyVsacw2bdEdJsyaSDMzSUUshSCaTELOSWLHCr
      FSr16Vkx5oVK/S0ef3WXwPM4/+oNpBjIL99+dgtURLW+RDVxTsSisXHxPLf/7mPcWo1yfWm+
      BCCE4M1r1/n15iPqp6ckk33OKDIdk6xFoTKVQiBwZHXs9yMsTugUQkCOD9GEpxbSljxIKbn4
      6ngQ0o333iEMAr77/Asam8+4+vI1IreYRq7f7mCX3ImLrBcEWBnp5U3L4uW3XuPxV9/QKVfm
      LwTblkXo+ZnXlFLst9s0u5PPcfq+UWT1LrzCfw82pqRy4EWy0KZhmCZX3niNMxtnOPyk2JGp
      Sin2Hz0i8CYLvI1ujyBHLipVq1x94zVajzfnTwB+4GO52atSEEXcevyYO0+fzrvauaLvhTx8
      3BibRMeaUC/u/HshYJgmp96+yROjWNxEEAScvnEdYZpj2rDkcbrrtSrWBNcZaVvc+Ec/nj8B
      bKyt0ztoZF4zpeTmubNcPzMeKVYkgv/4mK1cKQWuO8odTgs3zKxVCGbJCTRvZPfpi0eR0jCQ
      hizk3QtHZ5AFQTDyL6k+LgLTtucvBNdqNW6sbfDnf/oB0azJuFPquORXpRSuLbBKpcmBtBmI
      wpDuwQHBL//+yBVgQlypht6nIs8b6PgTDdNVHzVFZLbncI5njp0YQ1/pKIpQEEeffd8QQrB+
      /hwPvrjNlTdem7gQaqJORnVZlhUTwKSgoyzMnQCEEFRdl8/vdQlEcTcDkXRkV0dJvGPVYBTx
      yjnFxZs/OFa7yirKDUwf1pT6HpMeu599wrXX3hi5bbyTk1ShiUxwsJ+9G36f6Po+QRhSP5Hu
      fb6on9rgyTf3pq5pyWgu/V0IEZ+9NisW4g167uxZ1qsWT7vFix+ZmsleEIJIKZASYaiRc4Wf
      B5RSGJaFnTolpmgwuixwNFOofCQG4oReqVltyWpnxVm8m8qsEELglst4/f7EMxli15coJNz8
      ANV+gnHmd5FLV2euM1IL8gbd2NjgjUvz0e3Oqpp8XpBSzi3449B/gh/NXzOW7rMXqwfHYUQd
      3GALGU0XiFV/j2jvFqq3Q7j14bHqOzhcYETYpTPrcKfBvLr9e3MlnnI96ZimE+oKw0DMwIuu
      WHPyElUKoSKUzD5edTz91osDO9zn/esHNDZvsXTuCs9K7xPKCTuBvYRw11H9fWTtcuF6lFJ8
      9ssP2dzeJ1q7ujgCuHN/kFj2eeA4lteiSMoiSSTP8Q16Pfa//ZadxneYnknJXaZ27hyVDG1X
      FubF+thhl6XuNjvDCWGEHkpIIpkc5sWPSRFnuPQ9FX8Tk2CQf8hr4trbtGW+e4kwHMyr/xz8
      DjjFLdutg0M+fdajv34D1IJ2gDAMebbfZi6xdgm8YFzQQJviezz77Sd4rRaIECKJ5zXYbTYJ
      PQ+lOArITtDo5Dxxx0OIRc85Q+QHCAHl7haBdOg4A+fEKAyJgoDAzzZUJmEMU4gkIYMu9c2/
      Z/fcT/CDEMdxYqe95L1BEGBZFv1+HydD3lBK0ev1KCWOZvWNKsoHISVBGOLL6cnEhOGAMZs8
      U6kv8VLd4LbvgbUANaiGNefTTSB7epxINlAKU4UEwphIXXnTUinFwXf38dttEAJHlZIXObx/
      H7ta4+O//s3UprQODvGs0pTd4EhHfJzD7gLPAyExPv9m4n3K9/jBOzc5dWk0c3dkODQ33gTE
      iHEwDEM8z0MpRalUivX0nudRjdo0hglyHMfBG1pw0zt2yzyPcEJC9z7b/iqmXIx/kJSSlaUy
      Ys9DLYoAHj1+zOMDDzjm2b55yBjzk7I+q70mu+4Socgn2CzSUMMwy/buTm4bVBiyevYM1bNn
      M68ncffDT2ivXCp0XNB0KKThIUSIUgYqGtgwZEw8k+Ed7NI6bDDmzSUkgbsMKRcD7b0Kg11G
      RRGmaWKaJpFUqHAQtJMkku7QHSZqtQcyU8mlab/EoajRaTc4t6Dtvtfp8NVmA1VfkDeoUopf
      fvgZrXBy0ZKQJToc8D3GDgvBVrnASjNB5RmF4cQJFRW0Ss4DQvhY9jamvY8UQWzsU8ok8Ffw
      vQ2UKrAoTaEQbYjS2eKSMpjzeBOr20XdfAWlFH2jjIj8OLFBv9+PjVYAwnVG+jcMQwLfp9No
      xoa72EYkRg2OKlIoNXCHUJFCDV0j4u8qiqPgltZXCTyf2x99xr5VRydCmDsB9Ho9fnXrPhGT
      VzIx/N8s+N5kgLxdRgisSnVi/k+7Ws29FkY+QdjHsaqTbXRDVK0SHb9HlDFDpezglh8gZH+0
      nwQIEWA52xhmg37vElE4hb8WYiINCCEolUpEUTTCxwNEF86hhjuEO9TnO45DNNwVXNcdWPWH
      10Qq48fqmVN8/eHHbO/sYxjp6TlgATVBKBURGyCFQAg50L5JOXSvMJCmiZCSZ4836fQDPmmX
      iSpHi+78Y4K7XXZbHkyxAodIDkTtZCfAvwBYuniR/sEBKrHS6xNqS2tr2LX8Ha7nN2n39zll
      5RPJyP2hlzn5hfBwK/eQcnKGC2n0cUr36HWuo6KTGcPy4o9VYkKPpCDMyb80BiG4/PpNDjo+
      61eKqzdhss2otb3NrQ9+TXTpB8RylFLzN4TVajXeu34GoRa39X8fRrG8kEl3eZm1V24gh4dC
      mAJeMQyq6+usvvIKcoKxrOKscmrp5WFZMI33CDITDits9+nUya8hZYDtPJlS1/e7IG1cPE/U
      OqTXbM703CSHyjCMOFw6C6nzEeYfEWaa/Hf/8p8T/W//Jx980y7Et8yqx1+k3n8SsjIeCCEo
      nzqNu7JKv9mEMOSgXGa1XH4uUXFCepjmbP5GhtlEyB4qyktfLOg2Wxxu78Tf4ytiIFj0+j1U
      pDBNE8MwEeJodde9EwQ+lmUfPRcbVdRANmF8MdN6rlMXznLvyy+58qMfzWXBUyrClAbpKIKF
      OMO5rsu/+hd/xHf/87/lYVPOnXnPm4j62vOGEALDtimvHe/8sZPAkF2EmG23FUQYRocglwAG
      h4p0m0PCGuvSgR7fth0wDJrDXDuO4wwF4wjTPLIDHOV9lYThUXLhgWCcM14Kzp0/xc7XXyEd
      l5ULFybuptNQP3Wa97/b51dC0EuwSguzA6yvrfJf/9Of8D/9H39NMAd1qABcAU7o0ZejZ0s9
      T5boRZBXlndbGEHE7kYNIf3ZjbtioDGaWMfGOuev5TuYad2/lgV0ftd+v08YhrGLcqlUotVq
      Yds2QRDEu4Rt24VOk/F6Pb741d/TW6qfLNuIFDxSXXphbYQNWtgeLYTg7JlTVMxi2YqnTeKz
      Fcnbqw6XW1sse63Me7QKTB/WoP+lQwT1JE5GEE2c2BOapuvQuXuSdSRz+cwTTi/A7foIpVDq
      eEOoTmil1374OnGxPiVSKTWSy1WfiWAYBo7jYFlWbBMogn63h3IrlCalVikAIQTX3nmN9c4z
      UEdzcqFMqmWaWMZ8Vuf1skSKgeK0HIyrHdMRW8nTSpJnDehEUvozHJ2CchwkLaJJYtM68vhQ
      iTmitVFj//wKSkpU5CTHc2o7B59BhZO1QNMszZoFdV03Pj9Mp1LX7I3jOPE9mlA0slwksqCt
      yu1el8N2k26/d+wFxS6V+OEPb1LZexz/tjAWqAiycvPkvdwXuyGn6yFnLlTZd0ZVi+lndIIp
      7ampc/8DIwOR9Vs28q8lT0tMHqChNRLJ34pg0KYQIYzMei92Qi6Eg3XrCytgL3KRZg3LPhyR
      jYSQKBUN61cIkQiWj1YIwwkGyAIsZTpjt7YEJwNTkn2aZHdmcSOvrCxjbTTZ2XqKU63SMwy6
      /R4rtfqxWF+nUuEP/vA97n7yObf92mIJYG1tjRvnltm51zmxIBwqeOIpzNJkPjA58eaGCStO
      Ohopq95ZBjwI9+j2v6VWfndIBKPoDbsxVIrQNIiigF7nFKbZQhpRgpgVeBFhGGBU7OHkBzDp
      984wVXD4/kUdAPp+gF0qURGCxv4e1fUNgigkUgpj0pyKQkBknkQpDYP1U6tYX20tlgUSQlAr
      T47gGlvxJZljo5Ri61mb3uHh/Br4ImHYDaZRp+LeJI873XYlnzoRn1cEhyIash8V+r2XiEIr
      FkhVN8D7fIvg1jbBVnuwMGDT61wGNfn0tuMuVU7jMdLPP4bK7vWxC56aqaEzO9iOE/eRZoUn
      PtdoYAwPKMySAetrq/xn9QWkRUlCCMF/8Uc/41xllAe2gDLgcjTMCkVYDvGXA4LlgMgdZxu2
      eyU++Yvf0N17zoHmc1QyTc00J0wMo5p/nxC0bYOOIeJ4BCEEUVij171O4K2hlAm9EBEO9e1t
      Reiv0utcB7U89YWOu/gbfgsZ5stSRhhizCgP2abBarUcu/EJIaiWKlN3eH+pTjB0u8jCKaPD
      m5eWFksAAOvr6/z3/9UfsmL51BG8jsG7wuQHmLyNyTvC5BISUVKEpQgMUCaE1YjISjVeSPb9
      Kh/+xUd0dnenBLm/WMiyUsooxPKLaUM0VsIebpRt9VWRTb93gW7rVfrm64RLLxOWLuPX3qHf
      u4RSi40F7qy9QuDmB6d0K2W6ldkC8YUQrFarXFxbRbS6rNaWsU0r9izVatexVV6IXLY7iiLc
      sI1p24snACEEN29c57/5yQ94z5SsSMHSko8pwRSCEoKLQnLKHrgRjDQ068A3IWiqCh/+5afs
      P3y46OYPcAI6m2Sel1GIqVfMgrtMU9r0J7huD5zETCJqqPOvoq68AU61eAVoJ9IXZ3ERQmBb
      JqLvYSYOLNTKBa3t831/5Mxifb5xUguoCacrXRQLVoNq7Nx7RqkDV06vIFWE1zPGFm8nEiyl
      /ENFlDdoglZU4pNf32Xr9p1FNTuGOlHMzaiNIfk5MG267tAzU1GI0AIhB6tbUYQhqpfPl2dB
      xf95sZBskj5TQWv6kpm19YEhSW2f7netvdqz1mgatcUTgN/32bx1HxRsrK9SNSNCX7JS8Xn1
      TJMra20cI+B0V1IOoawGPiMiEBi9yc3rUebT3z7m4SefLpQdmocIcBJj24ng96E9u1PZiwjd
      LK15G/ghGbEWLqn9S9sm9LVYNS0Mvqq8sng7wOGTPUJ/IPgopSg5Fq7s8s7FJq6p8MOIszWT
      T76rYB2abJUkX0choicLrUK+LPPl7T1Qn3HxnbemP3AMPJfFcEGViFIFStPja4s0ZXu3QxTB
      6Y3vK6HWgALyCFSrm4uklgeIMBa/A3T2j9wWTNPk1RvX+N1rEktGREoRYbBUgaUlAxlZrHcN
      yl0DoYrnCg0Nly++bnD3b35DWNDEPhNeQHZgkRhaEcZQq9gsVRN+XUohg3Cm3VdGiqVOiO2r
      hferCMKx8M2x9iy2CaMhgZpPK5ddbMvENA2kAEOAawxcHQgVItGhSfeCZCjdAIo37e+w8Qkx
      +Pphn9t/9SuCof53XhijwzCi8nAXERa38MK0YJDjz4bnxbK4rkmpdMQ0CKXYeLaNnMHSvdqK
      2GhGnG4ETI47SyE3KC//3ctPD7EPJyccWzgB2KVx1VvTXwMh8QNFyZSo0EEENU45DqZh4EPs
      r5NMfZ10PBv8DXnqVekHgwGIhMF32/DbP/1r/M5sgt9EpDtfCvxaqZAwqnnOZAKtnBszKirY
      PKUwzBYwPhGz6kw7BeYUOr1eIdg6e4poBqt7YAzeMpAzTf8hUpnuxBFLlEUI7XPLeMuT2bWF
      E8DSmfGg83awzH7wEs8OXZ7uLXH3yTpRJLGkpOw4eCkfHf3XMIzYu1C71m4GyyhpIaKIM0gU
      kscNi4//7Fd47Wyv0VkxNlBCDDpWTieAQpMtBxK4LGQhv01p9EBkr8THch4rsqkIgZKzxXsc
      lA0erRo8rU9ORVO4TUpR6rVx+53xywXatnACqKzVqG6kXVkF3WCJb5/Webi7TD8w9c8o1x6J
      7Uz6m+vv+iTFpGSPkHhDhy8hDXZ7JT7+878fGMxOCN2FltfACI/PXk3MmKaSNQ0ggTUhChFA
      4G0MLIgT6i4OsTj+XIBnSVSBxWMc4wuJEYUsN/eptw4QRdxiU1i4FkgIwaV3r/HN33xBv3U0
      eRzHYX2tRufQG+hvEYSuw6bvTUw8q/W8yfIBhBQcKIWZcEzb67t89Jcf8/bvv0n19OnjtZ9B
      QqnGs2dc3PwrWpVzNJauFXpvEXO5iRBAOPotccpAv90iNPaJ9Mn1AkLg7xJ3quEHEf8mUKjY
      epKcGkmGSsT/yXq7cYSdFl2zw8HWzsjvp3yfPcskGDsdIetbdluKE9bojVEUsasecCF8G8s8
      8i8LpUGjWh+kgDxGiknRarVUpTKbmmxmKOi1ujz46C6t7aP4VaUUh/uHdJs9dpXgfhTx+eEh
      Qc5qZSsPiaKbE2GW5069JNu8+ZObLJ07l9E0RcQBodhFCQ8wMNQShtpAYKKU4rsPfsHylasY
      IiJCoKZZxsTRn7GBz9nGW48ecOnSGayUn3xmT6i8L+NyxCiZjbcl8H12Hm+ycekoD6dSCkMw
      SDGSeOSsEGwrRZAqc+SVkl/SjR9798QPetxE8lrCgBgptnd3eOmHP87cRY8bI/B84gEEuLUS
      13/6Bu3dJodP9/E7faQhubz8MtVSk//xf/l3fNNZymUTbOVxQz1AovhWnKfJZI/GJBpRhY8+
      +Jwf/CRkJTnQ+HjiGyLRGBmLSBwSqGdY0ctIqpiuy9KFk50DPA1Ru8n5a1cpVRe8GA2h+9jr
      9VBByJXXXy303PQcd8fHJBYxCkP2ftkYuR6zyirCICIUs0/n5xoQI4Sgur5EdT0hE/gdHv71
      v+PmuuKbB4OfsvK7pLtl1swQXbnEp7+6w5sqYvXyZRQKT3xHJLMzKijh4ctvsMNiE2MRmGf2
      i/wDPUCp6NgZ7AbJqE6uhp3+noNEWDrRcHJ/qIYtlsImT+xR8syXt47q+l4jwgYtKPFFe41f
      PAnHOiFJCH1h8Q0XkUS0yY4xmNaJHVHhk19+zVuhYuXqCpE4mHi/wiMQz2Z4mfli0ZMfoNts
      8tFv7vCrX383e7koXn5pmR//8R+eoHWp94yigeYmY6Xv7WzR/DZxnOrwsSbwFIUi7fKR1X+j
      ffH9E4AQrJ9/ma63CeLIhJ12IBNC0BVO6tFZV0hB36jy27/7hjedCrVL07KUMSCS5+F2/T1Z
      m6MwpB2V6IhjBJ2riF5/ds3LSBG6b5XCbTdwOy0C26G9PLAVJe5kaW2Va++8RbPXo2TbmCeM
      +hNCPB9v0Gl45wdv8t/+8dvYDFyDJ6oLUziOFdSTZTafHdBrpO0EAhCEnk9nd5f2zg5+r4ld
      KZa68ERYkDF3+kEVfC/Et+R/hxseBTaJKMRtNTACH7vTwvBTadSFwC6V+HZ7h7/9+hs+uf+Q
      KDq59fyFIAApJT//6fv8q3/8CoYa8HiLzb8j8Hybvd02vUYzUddgNkS+h1WpUlpdI/QUK9df
      WWBbEq3KDQI7GXUc1xBXsPSRerTvvbbaJzNi6FQxAG3jNH15tOsoKYlMazACUhKlEuMKIRBS
      0mg2CaKIrucdO2ZhJFj/WCUsAEIIfv7T97myLJ4Ly9E5NImUwf5el+5BY6ROYZqEXh8hBKXa
      JYy55OyfhhO8s1I4fmvMEJTFSo4Twkn7+mgyaR/8JAFo/y3f9wn7TcK92/itZ3jKxguOTnf3
      g5CDpRUa9TX26utEctwOJA2DS7Ul3rxwnrcvXRz4js3a2nRU3uwvvDiUSiX+9T/7GeeqEXpg
      JkVUnQSdQ4v2gUWE5OCgR3vvIJ4c0rQGwpiyMaLjGdBmxgRWpMjqXe3vI1MJifOeS7tnqIzf
      imOUwOKg/OFuEKdpCTtEd/93xOafwb1/S3R4D8Mw8H0/fiaSBn23TGBamalkqqsrEARcWlul
      VnJnnhdZ979QBADw2s1X+R/+5R9xruRTswWViWK6oiq6x2SfBVv3KnQOTZSQHDY92jt7Q/kD
      BA5WeBUx71NucptzAiIXgt3qRUI5+06VNd9nI4SjdpumSTBUU+pAlTgqq/0EEXUHfatCaN+P
      UyiOuLSQv+jZbon+7nwPHn/hCEAIwdUrl/nXf/ITfv+s4CfnrNzVqS7b/EH5U+yCqcHTCH3B
      49s1Nr+q0txz2XoGu9/sY4bnaX1lI6kxq3Q6aOf80yEmKqDufc2F9l9wqvsbjKiY12v+apnN
      SZ+z4apT5O0TrKMY5Ae1LCt2Z9GfzcpppGHFvLxRORNHdGlHx2RWuaT/l/5nSgO125vyPrPh
      +1eDZkAIwctXr3L7yzt8eL9J3jAcRhX+tPMO3gQnsCk1gYLWnkNrb6BiNSKP7qNHsGTR9z0c
      a/YdwPO72NZioqbs6JC6dxeJwgi71L1v2XPfyLy3sCaN8RX3/RosGfBkB3ozeE3n1umsIC/9
      CapxD0qnEPUbw+fHC0/G9yavh0R4a2YsU8Tnkg29hTMP7JiiUXwhCQBgebnO7/zOD/l3t/8v
      ZK1P1Bzw4qMvJOgpm5ppcrFcZtmyMKWkGwY87fZ40u3m+hXlIZQ29zZ9TjX3MV+f7oep3bN1
      24DjT/4R15jRdsfsAdFo4gAVjDyTZCOS5eTKUjmBWX/ZAEcMJn+WZX6kiAJqayEE1C4jhmcY
      5xk9k5/H7okipHGUalITQjIFptYyiWggYBu2FbNa+l59xrNhGC8uAQghWKrXqZoV9ruj/jHx
      gACvLi1xvVbD0tQvABwulMscej4f7e+zP2OYZCQsCC0Io7ETRUbuG6besG07HhTdwck4Br2S
      JeMZpsarDrUjeqB0BoS+rNOQZ6hGWwSyxJ68FAubemCTfagnp35e1z8tsdRuBlc5i31mGtIE
      mlVX1m9y2IdCiDgmJPl+AHgBlc8eI4KI3tuXiBxjZCx0P/Ra7RdPBkjCcRxcQ0Co2RCF4EhD
      dHNpiZtLS0eTPwGBYNm2eX99nao5O51v98o8vXVr4j3JiadXnnSCJq0STF7TguIkxNkLUlmu
      g1DxzLzJA+f3eFr6Cb6xFJcrhIgj6YCRDNW6fj1x5oXnYSRPIikn6M9SSmzbjvvM9iLMRg+z
      7WG2+pnyhWmaPL5z98UmANdx+OH1c1hBGzdqc9o45J+Vf8Nr1gPWbJvrtdrRSiIUgamIxOie
      7hoGb6+sTHzRrFUtRLK7uU84IXPboCMN/KAbC3PAyGqTFOIm1Te8MvJNZ7XWq5z+bpo2oXBR
      YlSDkg6/TGZH0CtqOhO2GkYUFMXoyix49KzDvc/vEHgerf2DmTJh67YV3lWGO0DywL1k/2rB
      Wy2X8a6dxntpg3CjNiJo63uklFjOAk+KnwdKpRL/6r/8p/wnv/cUISTR/rcEH93hDbfEr5+V
      MOXR5G+ugG+DDKF6oDAUIBQiEqw7NkuWxUHiDIC0kWjcr0iw07b4+oNfc+Nn72cez2OaA4HM
      sStIYTGYwBHSlnGZ6cEtOuB6kHUe/fQpi/pvOnAojwUqfEpjBtLtTfZTs4bYrgAAGqhJREFU
      Uy3xV397n9WP79LpBvzod67y8gLT00ijQPuFwL+6cfQ145Ynd7+lc9h8sQkABvnmz58/PwiF
      PHsadeUGV5xl1j++z0e//YZOoPCdweRHQGRCvwblzlCQkgoZCVYde4QAsvjZcaJQGKacuM8b
      wsXAHslpp4gI6RNlHEO0CKPepDqy6hv57YQsjFKKdmDRaQ3Y1F/+7dfcuXWfl1+5RHmpQqlS
      RhqSlTOnT/7uSiHHzg6eHXtPt3hy9x4/+qOfv/gEAPCXv/gF2/ttKq7JN99+y2uv3ODNteu8
      9vJ5Nrd22fP7+Cb0wwjTMHFMiW0TZ5VAgi0NTAmXVwYm+IeHfqamJV41UVw6bXL1/R/nnvZo
      MJj8aQgkBi4CSchs6cC/H8yPKBtilUYDHv76KRUZggpxLY/f/yfvUa5VsUsu7jACsdtuU6pU
      MneYMAgwLYtuq02pWollGdOa/Win9Dg/+OI2515+aWBbOP6rPj/87Kc/5cvbX1Epl/j993+X
      klvi8KstqpUK166UUUrxNOzwpLXHknSoY/Jtv4UwBCpUqEjRj0LWKyaXli0iBfvdkJaXn0bE
      Ctucuvpq7uQXWEjyLa8CgcQmIkBRJNhkMdLkcQ1yxtAlK91Dk7Q2yYkcShsXQU/Ath/y67/8
      mK4vMFTAhfN1TFPw6MEeG6frrGyscP3dN3n89T0efPMYP4g4POhQcgSNdshrb1zg5ns/IPR9
      sGabskoNzoxzHIder4cY+H1w5urlgTw1Y798LzAMgzdevxl/V0ph11z8jhev2udEhYumAiFp
      mwFVq0wQKbr9Lp2ox17fIxAhbS/CCxW9IFvNFn+WFirzYOphm7BSqXzHoYkgZHJypkGF81uF
      Z5v045ZgS8L7521anuLjZ35GtqFi2NIlC8njbl03jt37ITXRpMEqTx8LzIc7fHXnz9htSzzp
      gpIg6uhDfX/5yT7fffPvOXuqxGu/8w4qUjNFoWntmGEYfP13H2MO1db/YHaANIQQVE4t0dlp
      oYbZ2bq9HlXXRYUR/UhgyYBgeHLh016Phu+jgA8fdVFApCYH1DjCw67mnaMlKJasBCRGofV/
      YVAD1bGieP4eQ0DV0gY14s1pEmEV5u+FIMLkkKOjrnzpstnlyDEnVVQobR61LJ62PDa3folj
      Sn7yB++wemE8yUEWkhmkm7v7vPPzn8bv80KrQfPQarUwyzZLF1fj3/r9Pl/e+w7fsjBdh3Pr
      S1TwaHl97rXbuOZgwoZqMPmBWDWWHjwr6nL9jQu4y+NJvRaGhcnGipX+F0iVfXLLYE6PVt4L
      4c/v9/nbxx7hPCd/ql0WPjbexBSJsU0F8LF52Kqw3y/ht9uFakn6J5mmiVMpsf3oSfz9H+QO
      8OTJE1ZWVlg/vY6QgsaDPer1OqVSCSkFFUMCBqvXL2Kb9zi7XCJSiu8abX75dJd+OK6nz3M9
      yMYgmUqRXUAVZCAWpxsSHDivEs041L05bVtZ2jaTgPPsUGWQza2HzSM26DFU5SWQNTaHHY+O
      N/uxtkIIzl9/mdbeftymf5AEcOPGjfhz5dQSpZUKH//yIy6dPY8hDQzbxClZWPtN7Mvn+OTu
      YyJh8vpqnbJp8O8fPot3geSxprqjQ0x2Hj2jeupU7i4Q4SOQE+WAAZkc7/zhopjExg1vIEoJ
      6+lJeRLxe5J/UHZ9iktsscSRF2uVHi/xlK85T5CakpnOcsDTew/wsg7cE/qPyPgs2Lz7Lb/7
      J/9pfPs/SAJIQ1oGUcXg4we3+Sc//4OBe8LWASpSlEouUhytw5drFZZti71+vo5eGTaPD0LW
      Np9MJACJNXEXUAQLJ4DnhSzD4XFg41Nl3IV78HuXA47krlyNE1A5fZr1a9cHIrwa/KqGfwf/
      P/o9+WDjsEnr4JBSbRDn/R8FAQC89+47Iz4uyht8Nk2TmmOyP/TplSjqJhx2+wgVYRLgGIqy
      JXFtA9cUILvYVyyWz/xgQo2KgA4mJQRGyhCmiAiKaX9OiOOqOdVQOD7D11gm+AU4tXkY8cyU
      N2tcNoyoC6a9l2lZ2I49OQGuChFKoaQZt335zGm67XZc/n80BCDE6IHVwrFQrR5CCC6eWcd4
      tjPwATEEP3t9Hbd2keWlGq5bwnEcHMemUqlgGAb/95//OYenTmGVynHZGqMDMyACgYHEhGGu
      TpXU/Qc+hD7YpZNFfS0ASgl21EX84M7MoVFJF2nbsfE9v5AfUA+bAAMrpRuLEHRz8j0BnBGS
      fRUdmRX9AHN7h6hSIaplZ+2o793B6e+xff4fxb+ZjsOjW7e4+Mr1wfepLf4HCrFcQR12IAhZ
      WVmmUikP3JfLFqtLbswfVqtVbNum0RiE2oVhyB/++Md8cecrvnp0C7+2jLu+gbTsfH6XkDBL
      2dlpYnz9MQQe0bmXUWeuvFhEIAQ+Dkod8elF2Jw0f7+yusL+3j79CYdgx854QvKYdS6yjRzu
      BhGwxTIdjvI+CSFY21ij1+3RarZoq0FO0hhSoEwTZeazoK36FbrRhZHfVs6dZfP2HdqHDSr1
      pf+ICcAykRfXiXYaiJ6HZZs0lY9XtkYUDd1uF8dxRoIpyuUyP3r3HX4EbG5u8v+1dyXPbVz5
      +Xu9N3aA4E6atEzJsmxqsSzTkjWT8sRJZWZy8KRqJnNIckjGpxxz8ymVyl+QUy7JbSqppDKV
      irM5mTWuiSfjiVOyLck2ZdmUJa4isTd6fzmAr9lodGMjQNISvirZRXTjvQbwfu/91u/30Wef
      40FNg53KQB0bj4wOtzxDeRfEbKhBXGELztRi+/uPWTZ6yc33Y3N9s+nvdrn+lFIUSQI6JKRR
      AweKKhRUEEPQA1QqlrzfpBI01XkeTn6s7XM5QgxOYNS9+w9gahpktXHaPLICADTUIG4mB7gU
      HChosQhYzUap67ool1tJV9nf09PTmJ6ehq7rWN/cxO3P7mLDtKFOz0EIyWPxgyZzoKIM2Bbc
      zMRAP5te07D+8SrkehEgBJqUitCu26NWLEZ2ujmMfQG0EwQCHTJ0hDfuZvdbbVydvTya//c0
      ajXMLD4BQWrkcD3SAgDs/wj8vgGUyaBSqUD39RBjRSvBNOWgq1CWZSzMz2Nhfh66ruOT1VXc
      /WwdZUGENDYBMYxiPp6C89w1wLYBuZMN0PyLuo6D8u5e02vE99+9jU189PP/RYLYACi2aAab
      yAbu7rxKKAgoGQ7zxbCIAWwi4cZ7n2N8Yd7z5nSD8s4OzHIJ579y1XvtkRcAP6JKAf1F1cyY
      VlUVpmnC3C+nZALiui4URcH55WUsU4rd3V3cvX8fn6x9CjudRXI2QKMuSI1/HdEsHIXNLfA7
      ReTzeWA/baOxphuLKp+fQv7SGdx8/wMYVECDIPzofk4/74/QQ8XdoNLBH+oq1j64hbPXXuzq
      fse28eDDW1i++kLTMzxWAgCgiarPDxZy5zgOqqpCkiRIkgRN0xqeDklCrVaDZVlN92ezWVzO
      ZnHlwgVsbG7i9p072LQcIDsGOZ0Fieh00wmu42JhZhZzcwdGHBNeZqw6T8wDHI8fvncX277c
      mmEjJnIQeYK92kG/Nv9z+bu4u64LQRCaFh1PLJyK38Gn1TNwA3GUrk8NSlEqaqCu29EmI4RA
      K5UhiQJi6WYS4MdOABKJhMdfGUTY7hSLHTA8xONxlMtlb/H74bouJicmMDU5CcMw8MWDB7hz
      /zNs6mZXyXDGzjbWPiQQpEaPtHq5grMXL7fcx8oiAYAXJVz+6qsg6Q/x5s9vYdvsvmnIYUAI
      mmgJ/YX+7FTwJ6D51UlKKRwIWNNOwe0jFc0jGSAc1tY1nNsrIBkwhgtaDY7jIp88CKoVNzYw
      uTAXHO6IWiSdIFBKYRgGisXm3gD+mtJMJhPJMQM0is1rtVqkIPnR6bp//qBQBcsdmboRj8dR
      rVabeijvPHyIv/z7n2C9fkRMdmimLwnmVTGhYCeCLHA4NSZh9aGJdqTOfgM6NA1ifw7HccAT
      iucWeVx+9XrTKbBdLsOlFFPpdGMMSnH7Jz/Dym99raW09bE7AZiO76fx88N1Xa+AIqxkEoDH
      dsZea3dsRzX76wdM72Z0IKyHMgCM5/N4/Xe+ir/42x+j4AyHlCsI9n2EfU/BDcShFCXd7ei9
      6WQj+Jk1iCji4a4OQ9chKYpno43te+eYcwMACM/j5jvvtoz32AkA0PiSk8kkyuVyKJ1JpVKB
      KIptF2/HJLQhol6vh849NTmJ11/7Cv7mX9/Gek3siyt0WBAkGXVehRqzIp+fgeMJJIUHL/Bw
      bAdG3YbrhN1PIXAu+P3NTBCEJn4m/2lyauVFuI4NEOIx4bnUffxUIAZKKarVKmq+vHK/KzSb
      zTalVoS9V9O0YxECv6oRlsZt2zb+651f4Z/fXYNGw33tRwVCCGbmZzE+kfdOhVKhiLXP78G2
      DoxnoLHwsxMq4mmpQUaAhuPLdiiqBR2F7bonCLZtQ4CFly9P4NTzy002BxvTz9rX8PQBxNYA
      IdZw/35ZC2IGAVYM4wfTXf1kUlGQJKkvipFBwP+cYdd4nscr11dw/emxvppHDxLpbAYTk+MN
      IxmNBZ3OpDE1PdV0Hy8QTC0kkcrJ3uIHGpEMnidIjSmYWkiCF/bz+AUBWcXB/Nkl77RmZFns
      /+x1RoQl6BsQ7/0D+OIHByRZR/dVnDzIsgxJajUaw3ZWP/yxgkHTnHSauxdcvbyMlHi86diy
      HJJDRQhS6VRTNd74bBxKTIgMFhJCoMRFjM8eBL5EHhBkaT+X6eA+hmrNxP0HZa+VEgUBCA/W
      iw6P8wkANPREWQ5XETp5b9h7B6kC+e2QQWBmegovP50fyFiDQtgnU+IC1ER39oqaFCHHGqar
      YTowqjVQysO2xRZB29ys4u7dIjStQYqL+BzcJ78D5BrEXUSrP55GsB9RUUzDMPZLLKP3CHa8
      9koH2A3CSgl7heu6yKXiIK2pZO1mxiALNA3DPIgHsBkoRalY9r63ePLglAjO3JJFRAgSaQmO
      ZmAs5iKWSYPjXHBc62/wxHwaY2MxJBKSZw+4vpRrvq493icAswPCvD2maaJWq7Vd3IQQJBLD
      6SA5qJPgycUFKG6wG2YrCCgkV8Ni3MBC3EAGZSRRg+JWIfTBazFBKV5wXczuFbC3td2I2O5f
      KxVK2No4yCAVpOhlyFEH3H4neGZDiBKPnKDh6eUl6KUydtfuobS+4TXRBvbjCY4Jbm8D26t3
      YBshqdr0S8ILNEzwPI9EIgFN07w0BwZN02DbNlKplCckQU+DLMuRMYXDYhCnwMz0FF4+O46f
      flJpqbf1Y1Y18HvfvI75udn9eTmYpgnbtvGDf/spfnlPg9Nl0twEpXiJLS7Xxb21+7i1vQtJ
      VWCaJvS6HgiiRY9FQZBTKERRwHbVAaVARnQwvTiOuXgSS2MTyD6VgW1ZuLW6igfVMpTxPMSY
      iq3bH+PqmbN4sLmB9fdvYvzieQiSeFCboKqPrxs0CMdxUK/XoWlay64viiKSySQ4joNlWVCU
      5gZtpmmiUCgMZMf27/zBDNV+YZom/vvd/8M//uIuDNIaJCOg+O7KNH7t+kuhn8EwDPzdmz/E
      /9yrNGILbvt984rrYh4H6owF4EcchxpaA12UUmQnYshNRqRxUIrJlIhUQkGpVEY2m8XVp8/i
      2Zm50O/GNE3cu3cPW7u7yGezqNZq+GJjHS9evIQPV1fxEC6Ss9ON945OgAPwPI94PA5ZllEq
      lZp2dMuyUCwWkUqlYFlWw6XmS/BiLjezx0YcQUSpPYcNukmShFeuvwRFlvDWOzexa6mwfD+9
      QjU8ffrJyDlUVcUffPu3of74n/D2x9swtfaGtbu/uLy/0UqxCBykPdTKBrLjSiTbW1XToUgc
      zpxegiSKWMxPRG4MkiRhaWkJS0tL3muXLlxoJDnGVPz197+PxOQEiNgImvFvvPHGn4a5Ar+M
      8FOc9ANmE0iSBNM0m04C9mOxNGl/B0TDMCLrCg4DvwHuV7v8Uc5eMDczja9dvYgxyUK1tIei
      TsHDxeWFOF6+cinyfewzPffUM3CKFdzZrIKSaL29Tghm9ndXF8CnhGAjoisOIQSuQ8FxBHJM
      aLknrQCTuSTm5+bA8zyeyk9gOpXu6Ttm9yqygmwqjcrWNjTTRKqqPVoqEMvrH5TaUCqVmtyh
      giAgk8k01Q4A8DJEnX0qxm4M2GDVFHvN/74oD1S7ksNu4TgO/uNn70DT6vjWN349dK6wXJ9i
      sYg//6s3UaHtjf8UgFlKoRGCL4DIqjNvLg4Ym4ojmT3wCPFwsLw0i3Sq0QjliUwO56ZmIBwy
      AOm6LrZ3djCezz9aAjBIsKzRSqXSIgTJZNJryUMpRb1e94ptqtVqV6pQcLGHLeqoRRmVBtEr
      /GkC7a4H5//Bv/wn3rpZijwFutmARMVBetLA7ucKmLOTgiCZFpHNADNTOTwxN4mxbAYJScGT
      uTFMpdJdfrLuMbIBIsA8PJRSlEol73XbtlGpVJDJZDzPkD8iHI/HD/oS9IAwj0/Q4zRodHLx
      hoFSiquXz+MXH/8IRaeVxiRMkMPGsgwOhXUFPCw8ldSxOD+LL9a3oUoWXrl0Gc9dvACOFyBw
      HGShVTUaFEYC0AaEECiKgnq93rSr27aNWq2GWCzWkjAnSVJTvn4vCO7oQTXJvwiGnY0apqIx
      TE9N4trZCfz7zVJLIX73FV0Erukgxdl4WOfx1ckcnjk1h2vXrvVUYnlYjATAhyi/e5gqUK/X
      IYpiiwAQQrwIcqlUOvQiDXLw+FWgMAzCPgjOHXYyXTx3Gm/fehsVGl170G7XJtQBB+DCnAI4
      FlZWXkQul4u8f1h4rCPBQUSpLVE7OfP+BMFqiP3llIeBPzu1XSZoP+hXtVhcXMAffvMK4oim
      KY8UUurgSbWMJWUPk/kxvP69PzqWxQ+MBKAJrOtj2AILOwWYxycMhBDEYjGk02nEYjHPaPZf
      78eV1wm9GsedniNqLEopzp09g9eunYGA6Ch48P15icfZZAw8x+PKpWfx3d/9No7TCTNSgQIw
      TRO6rjcZuKIoejuw/zRwHMfrFB9WFsjzPBRFgaIocBwHhUKhZ+N42OhGWNq5l69cWsavbn2G
      1RKF20Wbp4V4As9PxLEniPiNV18dmnHbLUYnQACSJEFVVei6Dk3TUCwWvUUbtgiKxSJ0XW97
      EviDV8xd2uvuP6yFclhVSlVV/PHvv4aVJYCXWmnPg/igVMFbqx9hcWkRyWRUC6qjw0gAAmD6
      O0uAY8Et//Vg8KpUKrUk0gXBcZxXfBMMpHWDQer9g4Ysy1i5eA4cbZMQSClkuwLB3IXM17D8
      3PLRPWAbjAQgAqIoNpU9dkpS61ToDTQ4hlgNAYCuT4NhLfxeTpZOxTpzuVmkfElybGz/+LJb
      w2KWYGlxDqnU8e/+wEgA2iIejyOXy0FRmgM+YYtG13VUq9W2i1UURWSzWaTTaS+Zrpe64kFW
      i/UzZjshUBQFqZBcHg+EoCxOomCKiKnRfQCOGiMBiABbnBzHIR6Pe2RZzLANK6jXdR2WZbXN
      6mRj+HmHelGFBiUEhw2kBVUySZLwmy+dg0iNNp+H4vzpucgy1OPASAC6ACENRrZsNotcLodY
      LBb6IzuOA9M0UalUOhbVM2ObjRV0kbbDYWuHB2VUB4N0L1y6gPlEGzuAcPjl7fsoFIsnxp4Z
      CUCXYG5NtosnEolQ3iBWWdbJKBYEAbFYDLFYDIlEokln7mZx9CMEvc7Rbu4wuK6Ll86fBu+a
      Xj1A8N66TbCystL33IPGSAD6ANvBM5lMCzWK67qwLKupB0G7cQghHn9NP7tyrwt50O7UoCq0
      cvkCvnVlBmdyLjjHABcoazcg4/P7m8fu/2cYpUMfAmwHtiyriWYRaHh48vl8RyOXUopareax
      zPXr7uzFmA5LqT7sqeCfn+d5GIaB927cxLsf3cOHWw4IdUFJg9n62XGCP/uT750IIRgJwADA
      DGBWGAM0FkQ2m23hxg/Ctm0U93XioAD0siB7ZamLur+XuVlwjwX4guB5HvV6Hbc/+hiEENxd
      +wLv7exCL9v4zvVlfOPrX+/pmYeBkQAMCI7joFgsero/IcTjF+0kANVq1Qu2BVMtuhWCwwpA
      8G8/9XoY/IZ0pyxadk0QBHyw9j7Mio3nn72ETObomnpEYZQLNEAIgtDUQaZer3c8ARgti67r
      TTUHbFcdVgQ4uGiDi73bkk6gffGMX7WyLAvPzJ4DgGNNgPNjZAQPEMFdVNd11Ovtu8Uz75Kq
      qh4rhf/aMHOAwha567odd//gGO0yRsOus/4MJwEn4ykeEYRVdNVqtY4Ui0wIOI7zVCbLsnoi
      24pSQzq9J/i+QVea+Y1sRVEgy3LPeVDDxEgABogw37/ruqjX61AUpeMPz3b8RCLRRNQFdI4A
      tyth7IR+g2p+gzks94eBvcYE/CRhpAINEFG7fK1W6youEBxLEAQvIa/XpLl+Mk57RdhpwTxZ
      3apRx43RCTAgsFpgFgjzgxWU9DqeKIpeTzC2kDoV1AQNz0HWCEc9Z3BsP0HZsIv3D4vRCTAg
      sOM9LEUi6DLsZUxZlj0C3l6NYr+OP0yD2j8XEF5EH9Wk/Lhx8p7oSwymcqTT6aYUCUqpt3P7
      1YNOYEl4zDvUzSJql4k6DLUoTLD887Br/ZyCR4GRCjRAsBwhAEilUpBl2QtyGYYBnue9boaS
      JHXVQpUtIlVVvdhCJwHq5BEKS4UYFvybwElUhUYCMCQQ0mCW43kelUrF4xplu2M8Hu+pxxgh
      DZYJQRBa2KvD7u12zGEsSn+KxGEJi4eNkQo0RDAVJp1OeycDU4eq1WrPDBH+OoJ2C8ofgAp6
      ZYL3DQJR+UMnddf3YyQAQwYLcgXtAtd1I4m1Oo2nqmpH9Skquc5vqO7s7Hgn0t7eXiQBGM/z
      KBQKkT78sJSK4L+TipEAHBF4nkcymWxii+u32TYTqH7SCZhQOI6DGzduYGdnB5RS3LhxA4VC
      AYZhoFAoQBAEmKYJnudhmqYnKLquo1gsekJRrVabDPPDpHQfB4TDdjUZoT+wBXKY718Uxa4z
      RsPuOX36NAgh0HUdp0+fhqqq2NraQiwWQ7FYRKVSgaqqEAQB1WoVY2Nj2N7eRiqVQqFQQL1e
      R6VS6YoCktIG3fxJIwb7f1q7k+drPIosAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='52' name='Total Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA0CAYAAADc3zcIAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMNklEQVR4nO2ce1AT1x7HvyCCEMTeWCPVWtsOg47XUWhzGbVCBQRaRHy0lcvQoiIF1KZW
      ix30iuBjaqwjXoKtQrXUFnRkVMTi6woaKDcTMdr4uEZSi1LLhCWjlQASQrLn/gFseSQYHspj
      9zPDTHKev2/2fHfPOeyuDSGEgIODpdj2dwAcHP0JZwAOVsMZgIPVcAbgYDWcAThYDWcADlbD
      GYCD1XAG4GA1nAE4WA1nAA5WwxmAg9VwBuBgNSwywEMcF3nDW3QcD59F88VJEAqFzN9M3/ex
      as8FPDD0rK2k4j6PkMMM7DHAQynk47dgg6MU0mfiAGCS6DgUCgUUCgWK8sQIdzoN0ZJtKNY9
      m/44eg9rDEAVlGC0nw/e9ndEQQH1zPuzd3GDd+y/8cM6I9J2F6P+mffI0RNYYgAKUvk4BHjZ
      gTfbHyOlUnS0QMWhJByqAIyPZNgTFQhvYRKKmzOQ1JwB2Z4oBHoLuzU9cfFZhfcr81DUxgFG
      zUXs+MgXM4VCCL0XIv7QDXR5kdDdwNHNzX0LhUJ4B0Zhx0UNjM2toVS8COJSY4dKRpSKV+JQ
      hfWxshF2GICSQj7OD28CAM8fIQIppOYuAjXF2BaVBn14Os7Lt8DnrwwUb4tCmj4c6efl2OJj
      pq5FxuIfs2rwvzstX+tl2JX0Xwi3nsbPCgUUhRn4Z10q/nW8i6vSvXt47LMOh87LoVAoUJi1
      Ci6HtqK5ih28Fr+Da8cK219ljDKcrpiDdyZ2J1b2wQoDUFI5xvm92fLNDrP8BZB2ckA1Dm8+
      DPeUH7Eh4DU42bXJObwZh91T8OOGALzWNsNKhg1rQF3L6Hx47jxcPktEwGtOsAMAewGEqz/H
      5MsFqLTUwPQFiJ07FS+19G0vEGJZmBNul7Xkuy9EWO1J5LeRVF+Yj4b5IRjb7WjZRfeP5qCj
      efrjF/ZXit0sfwhEUlBhYW0GiBOCt+5ExOudfxKn4K3YGfF6j38sk8kRzrzmz/fLf0bmDiEy
      OxYavgCeAMaba8CowcW0bfjm1C+4X9vEJM9Laf00FguWT8SKk2qExboDqEdRIeCfxOthxOxh
      6BuAkuLCz0exS3i0Q4YHplBhCGMc4IwXRpn/OZxfGNWLH4rCFdko/L3FgI36l7Aq5yKiXre2
      vhFX96xDruBzpJ32YK4CKE5CUptSdl6LMevrEyhdkQCvmnM46xiCPdz4fypDfgpESaUYnyJn
      tieZbcqto3DB7EKgb9EVf4Nj4xfg7ZbBOGmKC2RXutNvJW49DsDapcK/Br9Z3LEwuALHCutB
      FZRg/LxZLDi79Z4hbgAKUvlEzJvVeSjw3g4E38xuUF9hfKKB4tBniEyxg+hzH7SejEcHzMeo
      vV/ga4UGT4wAjE+gufUTdmw+CvMbNs54QVeEn355BGNLu7d+2oGPkv7TqeTYkIXAyTRklroh
      1Isb/tYwtH8lSgr5WD+8Z04lbzb8R8ZD2m4a1DvK0t6DMK358/CRr8IzNBZpOQGYYN+mkEsw
      dhw0Yrt4KYJuPEIDHMGf5osVos/Mz/8xGvM2LsWuL96Dt6oWdvxp8F0hQmqiHqmdNPnj/Yk7
      If7bfiT0jaQhjw33XqChhBGlYhFU4fuwlNv+tIohPgViE0Y8Uf2A9EfzsYgb/FbDGWBIUIwk
      4QwEbaCwdFMwXPo7nEEENwXiYDXcFYCD1XAG4GA1nAE4WA1nAA5WwxmAg9VwBuBgNZwBOFgN
      ZwAOVtMvN8PRNA2lUons7GwolUrU1NQAAPh8Pvz8/PDxxx9j9OjR7ero9XocPXoUOTk50Gq1
      AIAxY8ZgyZIlCAsLw4gRI8z2c+bMGRw8eBCVlc3PW02YMAEhISEIDw83W8cSf/75J7Kzs3Hm
      zBmIxWJMmzbNoja5XI79+/fj119/RVNTE3g8Hry9vbFq1SqMGzeuy36USiXWrVuHESNG4Pvv
      v4dAILA6Rmv01tfX45NPPsHNmze7bMvDwwMSiQROTk59omvAQvqBCxcukPnz55Ps7GxSVVVF
      TCYTMZlMpKqqiqSmppIPPviAPHjwgClfU1NDoqOjiUgkIvfu3WPK3759m6xcuZLExcWRurq6
      dn00NjaSxMREsnLlSlJWVsbUKSsrI+np6eThw4dWxVpRUUE2btxI3n33XfLdd9+R6Ohocv36
      dbNlKYoiq1evJuHh4UQqlRK9Xk8IIaS6utqsro7U1NSQuLg4kpmZSZYvX04oirIqxr7U29TU
      RBITE0lWVlaf6RqItB7XfjGAwWAgJpPJbJ7JZCJfffUVOXjwIJOWl5dH1q5dSxobGzuVf/Lk
      CYmNjSWFhYXt0r/99luyYcMG0tDQ0OM46+rqyObNm8m5c+eIwWAgdXV1ZPXq1RYNUFRURDIz
      M81qa9WVnp5utq7JZCIpKSkkJSWFaDSabhugL/QSQsj169dJZGQk0Wq1TFpvdA1E2h7XfpkC
      DR8+3GKera0teLz2z/JVVVVh8uTJsLe371Te0dERU6ZMwf3795k0rVaLkpISJCQkdGua0xEe
      j4ctW7Yw3w2Grl/z5uPjAx8f86+MsLW1haenJwoKCszml5SUQK1WY+fOndDr9d2Ks6/00jSN
      vLw8BAYG4sUXX2TSe6NrINL2uA64RbBarYZcLsfs2bOZtKlTp+LGjRtoaGjoVF6n00GlUmH6
      9OlM2s2bN8Hn8+Hm5vZcYrYGmqYhk8nMrh3++OMPHDhwALGxsXBx6f69nH2lV61W47fffkNg
      YKDVdbrSNRgYEAaor6/HnTt3sH37dojFYiQnJ8Pd3Z3JnzFjBjw9PbF+/XqoVCrQNA2apqFS
      qRAfH4+ZM2fC09OTKX/37l24ubnBzm5gPPBG0zROnDgBjUaDkJCQdnkGgwEZGRkICgqCh4dH
      j9rvC700TSMnJwd+fn4YM2aM1XUs6RosDAgDtB44GxsbaDQaKJVK0DTN5BuNRjQ2NsLWtnO4
      Li4uGDZsWLu08vJy5ObmYteuXVCr1Whqan6ViFarhUQiQVBQEJRK5TNU1Dw4iouLERwcjAMH
      DiA0NBT79u1rd4ZXq9WIjY1FTEwMIiIietxXb/XSNI3t27fD1dUVkZGRvdY1qOjvBUlHKIoi
      0dHR5PTp00xaVlYWSUxMNLsIbt39OHv2LJO2e/dukpuba7GPrKwsEh8fT5qamroV29MWwa00
      NDSQL7/8kixatIjcvn3bbJnWHZ+ioqJOeRRFdWsR3Fu9ZWVlJDIyklRWVnbZjzW6BhsDY47Q
      BoFAgOXLlyM7Oxtz5swBAFy+fBlRUVFmF8H29vYICQnBkSNH4OvrCwcHB7i6uqK8vNxiH15e
      XigsLIROpwOfz+/T+HU6HZKTk+Hg4ICsrCxmH70jCoUCV69exZUrVyy2FRwcDAAQi8WYO3eu
      xXK90UvTNI4dO4a33nqry718a3UNNgacAQDA2dkZNjY2IC0Pq5lMpqfWMRgMTLk33ngDEokE
      Op3O4qXZ2dm5y92onkDTNPbu3QtnZ2ds2rTJrGFb8fPzQ2lpqdm86upqJCQkQCwWW/WPsN7o
      vXv3Lm7dugWxWGyx/e7oGmw89zWA0WjE48ePuyyjVCohEAjg6OgIHo+HCRMm4NKlS+3WBa0Y
      DAbk5+dj0qRJzFnJzc0NPB4PJ0+e7FSHpmkUFBTA1dW103Zrb1Gr1VCr1RCJRM91kPRUb+vZ
      f8aMGXjllVcstt9fup4Hz90ABoMB69evR0xMDIqKipjbIGiaBkVRkEgkyM/PR1RUFLPo/fDD
      DyGTyZCcnIwHDx4wu0Dl5eWIj4+HRqPBsmXLmD7s7OywZs0a5OfnY+/evcytEzqdDunp6bh0
      6RIiIyPbLaolEglCQ0NRXV3dY23Xrl3Dyy+/bPUuSk8wF2dP9ALA77//DpVKhYULF3bZ5/PQ
      1V/0y0Pxer0eFy9eRF5eHu7cuYP6+uZXJ/P5fAQEBCAuLg4jR45sV6e2thZHjhxBbm4utFot
      bG1tn3ovUG1tLfbv34+zZ89Cp9PBwcEBvr6++PTTT9tNLbRaLeLi4hAREYHFixcz6QUFBUhI
      6PoVUwKBgLlnJyMjAxkZGV2Wnzt3bpfTDcDyFMhSnN3VCzSfcFJTm1+ttWbNGrM7bK30la6B
      Qtvjyr0VAsCpU6egUCgG/Px2sMQ5mBgQ/wfoT3Q6HWQyGWJiYgb0oBoscQ42uCsAB6v5PyKr
      65ZT+vToAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5McSZrn9/OQqWVpgVLQjQYa3Y1WM7M7s8rOjHe7tzyeGc1IGj8A+SH2
      Fd/wI9CML7hLnnHvxZgNObvXy5E909M9aAF0QwMFUYXSIrNSixDOF1mRiMyMLIGq6d4e1N8M
      hqqoCA93j0f7448LKaXkBCd4RaF82x04wQm+TZwwwAleaZwwwAleaZwwwAleaZwwwAm+07Aa
      NRwXpHSp1+tI12ZzfY1SpYYEkC5bG+usrq5SbVg8X1rCsRo0mg5wwgAn+I5j/uZv2KiCazX4
      5LPP+PTXv2Rzp8jiwiKuBKwi//zhb6hUKtiOy72HD2hUi5SqDRyrfsIAJ/jjQiodZ+n5Mtnh
      ERTRuhaNJxkeHiZs6gCUtlZY267wm1/+4oQBTvDdhqKqNC0L6TQAnfNX3uUvfvg9vvj4l9Qt
      F4Cd7Q0eP35Cpd7seFZqEbRvoc8nOMGxYebCm/z2k18zL+DytR/w+O5NVnJlUiNTmJoAR+PS
      lTd4443XABjMDmBGEsQxCA3HEScrwSd4VfH43lcnDHCCVxsnPsAJXmmcMMAJXmkEOsFSSoQQ
      h2roQJaUEPS0KiUSdt8nkZL2uw/S5mH7eYIT+BHIAI8ePWJ8dJimVAlpUKnbJGIRhADXtihV
      LRKJCPVqjXA0hnQd7HqRGzdvo4VjlPI5BidmKW094/JbH3D/xmesV+AvP7jMw6VNzs1MUK5a
      ZDJJhFXh0XKO6YlxkGXu3l7h4uVz4Nq49SKf3bhJNJpiPZdnbPwU9dIWjhohrlisVx3+4gfv
      f9NzdoI/IgQ6wfcfPKCyuciNxTJXz4xQbEAqHiZkaLi1Mh/fuM/rl84zODRMvVJE0VOcmxnm
      wfwTYhEVI36KzdV5sqkI8cw0duE5ZT1DVqly/cFzYoqNxGXm4jWyZpOHD+5QjUxB+TnCDoOw
      CMVTnJ0Z5f79JyQUB2XmDLnHz4joLvHhUzQLa0gzzcRI9tuYtxP8kaDHB9hcfkqlKYnEU8xN
      TzA2Oc350zMkQyoLK9uY4Shnz8wxODrJ6ekpSltbTEyPk99cZnV9E1eN8Pj2JyQyQ8zff8Tj
      hUUqtspENkE4kcbAIZ2KU7dVYmGdr27cIDk0TXHpAehR0tksjXKO4fFJimtLLG9t4yYzzH/6
      O+Ixg0eLa2xurjL/6Bnrm1vfxpyd4I8IRwuDujarWzuMDA302vYv3yhra5uMjAwfW4snOEE/
      nKwDnOCVxkkY9ASvNE4Y4ASvNE4Y4ASvNE4Y4ASvNE4Y4ASvNE4Y4ASvNL4xBnAbef7LLz4J
      /mNlnR//9F/46LefUN3drAzwbOHZN9O5PwBKm8v86qOPmF9c7XtPMZ/HCQhCS8fiv/z0x/z6
      V78mX7Pb17eWnlGxe+//NtEo5ni2st5xrbC1TLnZe+/i41vcfrCIXS9RqgXc0IXt1Wf87vNb
      rKwu716x+PlP/4mPPvo1G/lq+761tWVqtZebmG9sR9jiwjqzozG2aw5ff/T/MnzqDE/nn3Hx
      rXeYidtMX7jK+WSTZ88e8XT+KaHEIOPDCao763z0yRcMTUyjCEFScxk58xph9Zvq+cvh6com
      f/qDP0EIuPHpr1jZcbkwNcjjzSIDYUGxYTA5kqJY3ubW7UeMTJ8jt3CLsTNvcW5qiLGpM7x+
      8Qxf3bjFzdwqFWK8dXoErVbkXz7+mPjgJCFhMzYQR02PMxAPfSvjdB2bhmWD63D9k4/YqKoM
      sMlOZI5T0SYLS+tcfPeHTA3EqDQ0XHsHt6KTx+WTX/4TU3Nnef58nakz51m8/QkT599i8/kj
      qiJKzM3TDA3x0c9+xpUP/owLc8Nkx2a4cnmOr+7c48GX65QshTMXThOza/zqw48hOUzShOmR
      FFVzmPFMZM/+f0MMIFleWsBCUHLjjE2f59zsKKqZZmZsAEotDt/K5VEaVepKlNFEFAlsrq2T
      HshSrjYYiirkGhoz/8qJH8BUJPlqnajeoFACrBq2NPjeD77H6vwDXp87y/L8I9aWV0kODBE1
      dSKz5zk3N4Frt6TjzsYyQjcoVB1Gx5NIYGttlXh2gEq5xNhIlPmNKu+f+naI3w+rWaVuCZqN
      CpPnZpkeeZ27v/0nhkZH0BVoVnI8efoMaTcZyqSRIcnU2UucigvsyBWmR+LI+mtMZiNsrIao
      l8pcfO0c6aFpHoQE52YnAAuASmEbRcBGscH05BhIaORWcWMZ6uUyF0eHuflkmx+8P71vv78Z
      BpAOF65+QCYVYzuXQ9NSoIYYHth9vZmivPIl4dFpzl26gG1/iYhEGRlMoEuLjcoy52YmEaV1
      VGPkG+nyUXHmwkW+unGDzMQcQ4MxROQUQ4NZDAGDQ8MoQpAZGmJ0aoybX94iGosTNeMACEWl
      WcrxXAnx+usXiOoORSdEKjtESlXI7ZQ4f3aOgajNZrP2rTpyeiTK9p3PwZkhnYgyODnD0FiG
      r+7f4c1rb3Pv0SKxiInjuvzoL/4KgwbFYpVoLIyjDxFOxFBv3WRFPcXw8DBmLEwsZDAyOUM6
      E8fQBKeGB3j4dJnzs6MIa4eHS3D50mWSYZ3NsmQomyWkCRLrBWamzpBK6UTzDpqyf4LOdygV
      wmXh6XMmp6c4wLheCSw8fcrE9AzqyXx0YOX5U7Kj061N8fvgO8QAJzjB8ePYtKfjOBSLRRqN
      BgCNRoNSqYSUEikltVqNSqXSscvLcRwsq2XXua5LsVik2XwRHajVah33u65LqVSi2WxSr9cp
      FAoUCgUsy8K2bYrFIrb97YVJ/OOxLItisYhlWUgpqVQqlMvlnl1uzWYT27aRUlIsFikWiziO
      Q7PZ7BmPlJJyudx+hzfn3vNBc/xNwnXdju/nui6NRqM9/kKh0PF3KSWlUqlNM/75C/qe3v3e
      PdCiM8dx2n/vppn9oP7d3/3d373UaLvw+PFj1tfXuXPnDslkkt/97ndUq1VWV1exLIuHDx9S
      qVQYGhpCCEG9Xufzzz9ncXGRqakpbt68SS6X49atW8zNzZHP5/mHf/gH3njjDVRVRUrJp59+
      SqlUwnEcbNtmZWWFGzduEIlEmJ+fp1gscu/ePWZnZ49jSIeCN56FhQWmp6e5d+8e29vb3Lp1
      i+HhYe7evcv29jbb29sMD7dSvR3H4cMPP6RaraKqKl9++SW2bZNOp7lz5w47Ozsd47l9+zZL
      S0vcu3eP6elpfvOb31Cv1xFCUCgUuHv3LuVymeHh4W98q6hlWXz22Wc8efKEmZkZAH7/+99z
      79495ubm+PDDDxFCEAqFCIfDSCn57LPPyOfzWJaFYRhcv36d9fV1JiYm+NnPfkaj0eDOnTvM
      zc0B8Pnnn5PL5bhz5w4zMzO4rsuPf/xjDMNgYGCAR48e8fOf/5zXX3/9wOM/Ng1w5swZzp07
      R6lUIhwOo6oq4+PjKIrC7du3uXr1Kul0GtdtVesKhUK8++67aFrLEX7jjTcYHh5maGiIer3O
      gwcPuHr1arv9Wq1GLpfj0qVLCCEYHh7mwoULZLNZpqameOedd8hkMgwMDBzXkA4Fbzy63iq/
      d+nSJSYnJ2k2m8Tjca5du0alUiEebzm6ruvy1Vdf8cYbbyCEoNFo8MEHH5BKpVAUhTfffJNs
      NtuWbgD5fJ733nuPmZkZHjx4gJSS8+fPI6Xkq6++4urVq2Sz2fYcf5PQdZ133nkH0zSRUvL0
      6VMymQzJZBLHcXjttdcYHx9vE6bruiwtLXHlyhVUVSUSiXDt2jVUVW3//ezZsx3vUBQF27aJ
      RCKsrKzwxRdfcO3aNYQQbG5uUqvVmJqaOlS/j4UBPDMnEolw7tw5bt++zfnz5xkdHaVUKpHJ
      ZDBNE9d1WVxcDGzj66+/plwu89Zbb/H48WMajQb37t3j0aNHAKiqytDQEJqm8fTpU6SU3L59
      m4sXLyKE4NNPP0VRFN54443jGNKR4M1HNpslk8nQaDRQFIXvf//7PH/+HIBiscja2hr379/n
      /v37jI6OEolE0DSNx48fI6VkcnISXdc7CNpT89FolMHBQUzT5OHDh6TTaUKhUPv5bxOO4/Dg
      wQPW1ta4c+cOtVqN2dlZ0uk0N2/eBGgLMVVVWVhY6Bij67pEIhGi0SihUKj9t7feeot3332X
      cDhMvV5nZ2eHu3fvcv/+fe7cuUOpVOLu3busra0duK/H4gR7EqhUKgFw9epVrl+/jqIonDp1
      ikQiwa1btwC4du0aN27c4PLly3z11Vesrq7y/vvv8/XXX5NKpdB1nWvXrqEoCvfu3eP06dP8
      7ne/43vf+x737t0jl8uRTCa5cuUKX375JW+99RaO4/CTn/yEwcFBYrHYt8IExWKRmzdvsrq6
      yrvvvsv6+jrNZhNVVZmbm+P+/fsAzM3N8eTJE95//310XadWq7G0tNQ242zb5t133+XGjRsA
      RCIRMplMmyju3r1LJBLhvffe44svvqBSqTA8PMzw8DA3b97EdV2+973vEQp9s2sDlUqFL7/8
      kpWVFd5++23m5uZwXZe7d+8yMzPD9evXATh37hwLCwtcuXKFxcVF1tfXiUQizM7OcuvWLTY3
      N/nggw94/vw5zWaTUCjExMQEOzs7pFIp5ufniUQivP3220BLK1YqFSYmJgC4detW20o4CL7x
      KFClUkFRFMLh8IHul1KSz+dJp9N/FCVQXmY8uVyubRp91yGlJJfLkclkDjz+fD5PIpFom0fH
      iZMw6AleaXz3RcoJTnAEnDDACV5pnDDACV5pnDDACV5pnDDACV5pnDDACV5pnDDACV5pnDDA
      CV5pdDGAzY//r/+Tkt1aG/v9L3/K/YWTCswn+ONF15ZIl0jY5datJ7x/eZSt7QIyU2VNPGZ+
      cZXRqTMM6FXuLmzhOPDOe29jnGzPOsF3GD0mkJ6YxCousfTwPlMXLgIQjkZQkPzq178mv7FA
      bOwcr0+F+PRmcGbnCU7wXUGgDzAcN7jxvMBkNgrAr377KW9eu8ZAMgZCYOg6tWodM2R8o509
      wQmOG13JcA6LCysMD8SYX8pzdiLNZkXFKjxnrdAgEokRt5b5YlVlanSQNy9fONmgfoLvNA6d
      Dbr9/D5Wco6RhP6H6tMJTvCN4SQd+gSvNE7WAU7wSqMjDOq67reyofoEJ/i20MEA1Wq1vWXR
      dd325m6gfe2g6LashBAdFQH82+H2s8K8e/1tBP0e1J73s5QS27aPtK2uXz+9PiiKQr1eD9yP
      682lEKK9tdGb473QPU/eN/i2t0d6G9b36oe/NhR0fi9VVQmFQliW1S6LIoRo/1yr1RBCEIlE
      2lUzvPpBQojANg3DwLZtNE1DStm+36tXFIn0FsrtqQ3aTWxCCHRdb5fn8IowQTCRe+j+m7/D
      ruuiKErP5AURg3+AB2UA75pHcN7/3c8cxv3xt9Hvfd1tdl8XQhCLxTAMAykllmUdqJCVX3C4
      rtsuvfJtwiO0vRigW9AJIYhGox1CyBuPpmm4rothGNTr9fYYvZpJlmX1tOX97/3sFSFrNBoY
      hkEoFKLRaPQIPX87fRkAXkgZf8Uub9CeJPJe2v2sn0s9+CWgZVntAkn+vwehH1HtB/8kef97
      Rba62/Ymsl9/9nqvJ90VRWm3770rHA63K9lBq36O93E1TcNxHGq12p7j8DSFbdsYxndn7aV7
      zjym9657FfDC4XDHPDiOg6IobaHbz/IIEoDeN7Msq0NQGIZBo9FA1/WOb7RndWhPUnvE7w3A
      +wjdZQj3k5J+U8FTa6FQqIOA/GaXf0AHecdB0E3o3W0FSZl+6DYTu383DANd19tzqKpqe+zw
      wgyo1+t7agHXdf9VEr9nkvkFTLcwUFW1g048U8b/ravVao856C8IFoR+2t8T2n4h5DgOqqoi
      hGj/3O5n0KD8DfsH6D3UaDRoNpsHsmH97XodhxZxqKpKoVBol/fba2DHiW4m2wtB/dmrj951
      z2z0hEg4HG7bpv550zRtT8L2iF/X9WOp+ek3bQ8L//tN06TZbFKr1ahWq23T2O/j7PUe/73+
      +fCu7de/IMHomYhee56A9bSJVzfUr1ECGaCflD1Ipw5iz3r/FEUhFou1NUv3PS/7juPoY3df
      PJ8l6OP47/FLHr8KtiyLWq1GoVDo8KP2GqvnvJmmeayC4WWJ309k3u/euKrVauC89vNX9guC
      HGS8B6ED27bbBO99k52dnbaG6csA/k4GOcbdzulBuNbfaf+9Xvk7P5EFtdfP+T4o9iL+7jHt
      NZ7uiI7fSe3WkvV6Hdu228zRrTW9IEMQXNdtR5SOiwG8/vnnMsjs9EvTIE3vRQtjsRiJRAJN
      0wIFg67rffut6zqhUKiv2bnfmA9CB14kSFVVNE0jl8thmmb7u/UwgN+G2oszgwilmym6n/O3
      200EPappt92X0UT9sB/DBjF2N4KIpVtoeONpNBptBvCP3182Hmj7Ccc1zu7+7nXNz8yH0Yxe
      aXYvchONRgP76zmdQX3wzGA//ELkIAR+mHs1TSOTyeA4Tvv+jln3qvQehOgO8uJuIt7LuTUM
      ox0VaHNnAFEcxHTYq5+HkTD9EDSe7r/539/tCNq2Ta1We6GGFeWlankG2b173bPXtzoIAXVr
      f9d1963HL4To6+NIGVzP3//N9utX9737Pec56IFOsGe79htIP4LcTyL6r3dHSjzJ46lLKVuH
      QPjfG0S0hyHcbm1zFCbw2/veXPl9hG7t4nf0/KhUKti23bG4s1e/XwaHef6wQQGvv56W637e
      k7L+cGb3+zzn+ThwGAYwDIOdnR2azWZvGFTXdQzDoNls9jTifVjvY3bbkR4Oart50tHPDF59
      +Wq1Sjgc7uDW7n8HIdzjuqcf/BEPKVuxeq8UvDdGoEcLeNLPIxDPVj6oxOvufz8p2n2fH91M
      uZ/EDZpz13Xbjn0sFmv/3Vt1968hdeMwGQHd9NUNv6D15kPTtEAGUxSFbDYb7AN4RLjXx/BL
      wYMSWL97u2vfe9A0jUKh0B6Q/99hJeNxOZBB7XY77EH98yI58Xi8zdTQkp61Wo1ms4njOJim
      2dN+N/qZXd3zux/xvwz2mvdKpdI+Dglomz21Wm3PFJp+Gj3oWpB07zaJFUVB0zRM02wfvuK3
      Pjx4ZmGgEyylbJsj3aZMN/EHOasHdUr6wVOd8Xi8vTp40A/on6TDrFMcB/pJJs9MaDab7cUx
      P6SU1Ov1Hlu5H7H3i5ocR39f9n5Pa3tzXiqVKJVK++ZedZvEL4PuZ1VVbRN7Nx174/AEV+BK
      cJAK98OTch6zeP/365Df5NlvIH4p76kxj3D80nUvE6ifhPhDo1tI+OGpYk3T0DStbfsD7fHt
      pbaD3rFfX4K+Q5CkfRniC/qmzWaTarWKYRht4vcfirdfW0HXhBCEw2Fs2+7bVr9v7DhO4Hg9
      od3jBHs39FNLQSrIH7f3lpv9zvJBvfmgPgDt+HKj0XhpIj6qhDkMvNXefhrRywny5shvQnXH
      zF8myuV/dj/7+mVM2e53++G6LuVymUKhEOgnHhZeVNJLJdnPufX+eTk/fkHTTfhtARvUkGVZ
      uK5LNBptp6v6uayfWeR3QPb7kP2kUffPnqPsScXuARzGNPomoGlaRyJWkPPm5ch0+zxHkcb9
      zK/j1HzdaTH9+uJf6fZf9/p0UHgmoT9jNoj2vOv+d3qEH2RV+J/r0QCWZbGzs0O5XG6rZi9d
      wbOruxcr9vpo/WzWflqm37OmaR7oDNi92tzLTDsOeJPdz+nzM208Hu/QlEHP7BWE8CNoFfaw
      OOh8vIw29RPvYZ5XVbVvisVB3uk/P7jbH/T60cMAmqa1V/W8DQ17deIgAwoaeL/JCFLlHgzD
      6NBG/bAfY/2hiN/73/u5X2pHs9lsR9v8zzuO0xEz32sMkUiknV3qRTv+NWA/s8u7fpBv6F+x
      7X5+v2cP+o0D9wN40taT9p7z4VcnnqftN3uCEKR2gu4JMq26oShKu2/eekG/+/vZvH8o+DVb
      dzZk9wf3skT9Ut9xnPYpm/vBs3O9OfA71Hv1zzRNbNsOdLJf1vzar59+mvG/a79vIaXsoDv/
      c3v1c79NVt48KIrS8hO6G/CIO5VKUS6XqVarPQ16nrk/xdQ/4P0G5h+MnwgO6vT57b7DEPUf
      yg/obrfbqey2m/3E7t8eGaSm+8FxnJ5vsxcikQimaWJZViCjHRcDdPs8bVPjJbZwehpgL6vA
      /579IlxCtE6q9xbshAhYCPNuVFWVWCxGMpns6Lz3Em9LnMdNhzWF9ooodPsZ3c93L571k/ZB
      kuY44s7d6NZy3s975ecc5v1HPR7Uk3ZCiGPxF+BgYVj//L/snAd9/254ac77Ram8pD0vQqSq
      av+yKB4TmKZJNBrtWfDy8j80TTuWQ5n7mTFBA+7OLdkrAnIQVXtUhvC/q58THOTrHMSW9STW
      UXaD+QVKv74dpuBB0OJnUNjVP8agIMp+OMg9uq4TDod70qq74c1lt7+0p/fkMYF3qLV/WVvK
      Vi5LOBxuawGAcrkcqAb9vx8W3bZ+KBTCcZyOpe6jSLWg/h6mvSAt413vF+o9SPura+s0XIc3
      Ll7EMIz27rCXQaVSaS+2HTSI0O/eg87PXu/Zz9/br13/c97aStAioueTBWkJKQPWAbrhMUEk
      EsEwDMrlcju5ybZtyuUyuq63tYQXB++evG6i8EsGf4eCJqb7mqIo7WQ9jwn2srn9//eTgEF2
      5ssylb89/7iD+tT9jL9/G7ltnruSs9UqkUjkSDWb9tp8f1jtFzRfRzFvDjvPfjO6X6KdR/jx
      eLy9J8FxHGzbbifoua67PwN4jXmrvLFYrL045iU/eTn8lmXx8OFDHq6sUtN1Dk0+EryH7EKe
      gZFBAIpb2ySyGeiRphA0793E5qE7Lbnfff6/BaGS3yGaTvX9u9gdym7jLy72mZFasURD6Igu
      9ewIgTkwwPb29rHlNXna2kvAg97FzW4t9TLv9QjwMBUdgu7p1s4HddYVRSGZTLYXJL29JvV6
      vSNqdqgAsqIoGIbRLo3icRPQ3tguVBVDEdRTKSLp7GGa70Dp8X1GL54FoHH7HqOvndv3mT9k
      mNODlJLV+SeMnZk7tjarxRJPlrdIjI71vEs6DjeePmNka4vBVIpMIsn61haJZIJoNHqo94RC
      obYp4G1DhRcpDEG5MwdFtwb2M1f3mPoRv9c3L/QepJW9MjN7VY3QdZ1EIoEQor3nol6v96wh
      CbFPWZR+A/X8go2NDXRdxzTNdi2Xz7/4gsGBAahU4QgM8DI4qi/wbcF1XRS181O0JbKqYo2P
      s2DbPFheIfXwKfWBNI3tbcYcm6uXLrW1cz94wQzTNNtpGH74peNBwond8G+j9f/vPRuEbvPH
      I27PrA3aR+CFU0OhEJVKJbBdIURbMFiW1Wbs7n55vx9pCfHx8jKLWzlmUgkGBwbQdZ3/7j/8
      B558/DHl7Q20cIi1eIKqYe7f2CGxsLXNWCqJ/i2tgrpWE6EFh97spQLaeBIRcHiC41Uo6E4Y
      pD+BCSFQdZ3o2BgWoAIRYHlzg6WPP2Yyk+HKhQsgJUsrK8xMTXU870nNpaUlwuEwExMTHSnZ
      HoP4d3YFOev9mOCgaxdee/18Lr+P4q2ed0eS+lXS8/rprZDX6/XAekPdOBL12EJBTE0zXylz
      //kyUdfh7WqJ2M4Omt0kXNpmuFzk7tAohXBvXcaDQnhGtY+eBuPxI8fHXx6CZm4Lc2i09VuX
      hFSzkX7mPtVGEwkkwi9Cx6ZpYDRLwPChehEZGITsABuNBh9e/wwtHKIRCnPr+nUAJmMxBhMJ
      IpEIX9+7x0Amww8++IClpSUikQhDQ0Ntc8TTEP6U472c1L1i7v22QQbB0zhBhZmDbP69olie
      NVKpVNrM7Pmrnvbzaix5WaZHqrD6+uwMbqmIHosTHh1jOhRC13RsIcBQsFQXVUpm8luIA0ZZ
      ZGEb99ldsF+ov3gmQym/03FfxDRQ+qwdHARHjf+Hhsc6nER/+oMSMfqq/ng41EH8AKapE6tv
      HzpcLIRAKAp6OIx55gzqxCSRgQHMU1OoyRRKKMy5c+coVmucmZ3lz/70TzFNk+npaUKhEI8f
      P25LVC9ikslkyGQy7Twl/xztVbLmKPB/C3+Ep9+9/eZC1/U28UMr50pVVaLRKK7rdlSk84oS
      vLQGEEIwMjRE9uEjPNKMN+pY1SoIgVKXhBoKaBCyLDTHwQowV3pi6KtPYWcLNZRoX8uMDrN0
      /xHxTP/ISxCkXQU1/I05xwcxFwKfVXVk+hR2o4G+u6joPa/W6ziHWGh0i0VOh0NcuPw66VQK
      IQTvvf1Wu01PyiYSCeLxOOvr62xubjI5OdmxrtJvq2r3WF9WgOzlVxx2DcYjflVVO8wo13Xb
      OWv+ynpSthIP6/X60TSAEILBeAx3V91ZikqzXAYJcjciBOAKBXfXHh4qFVH2cqhOnUOcOocb
      TXZcdxybavHgyWIAsroBMlgVH3SlOPjh4HceRavoho4dkNQWzud7rrmuQ678rOf9FAr85ewM
      H1y9Siad7iBS13VZXV/n7/+/n/N//ON/xrIsFEVhdHSU8fFxnj17xtZW60xoIURgeZx+tnvQ
      7wfZB/wy+UFB7XgrwZVKhWKxyIe//TX5fJ6dnR2eLS70/daO4xydAc5MTNAstHTAejyBGjKR
      VpPI4GCLy4HNWAxHaTHDRjyBuwfRiWgCZXwWuqIipy6cY2dji2qheKC+SSkR8SkQas+HO4rp
      I4Q4/PrGAaCqIGRrFdPft/LoaM+9iqKSiU13XiwW+dHsDEODg1iW1ZMLf+fRPP/PvUcko1H+
      23//Nx2pFbquMzc3h67rPHnyhGq12t662Q2PcIOIyv/7XiV0DjL3/RYMe+eiledUrVaxLIs7
      C48Zv3KR20vPWLQr5CMqT54v9g2/HvmUhVQqRfXRA6xqle1IlJWpWYyxcRRdx0WwHkuwkDpk
      ODTIy1cURuem2VpexW62/IPG5hryCId2HMfCkuO6VA+QjuxBOE2iW/d6rs/E1zY3t5gAACAA
      SURBVJlVHxz6/YrlIDa3+NHMNLZl8cmNL7l582Z71XN9fZ3/8smn/GZtk3qjgVmr8tXde4H7
      a1OpFDMzM+TzedbX1/dMnOu217uJq7sMTPdze0Vn+mlT/3v8fkilUsGyLOafPSV6agwjHGL4
      wmnSo8NEU0nWK8WONvw4cgxR13XOnz3LspQgBKupDOuJFCHbwlJVLJ8k1+waqrRp6PE921Qc
      GyMgLCiEYPT0DM/u3COWSpJJBEeWTKtMQ4v2rBwHtXdUKEJgagc/sEKqBpWBCz3XK+Y0y5Ul
      RPzgK7BSSpw7DxkbzXL98UOUZIL8yhJvz53l+coKv3+2yJYjMZIpVCFwXJdn4QgLjmDx9x/z
      795/D0Np7RGYf/aM7Z0CrhAsbOc4FTZ548qVwFViP2H2MyMPEgnqbiPIbPIXXOi3Su2lhm9j
      MRjtpQl3D21yLEH0nY0N5MSL2LOrKHvG/vcjPFfTafQhKt0wmL1yiYXb99CnTx3aYTrI+w+D
      1sLg0duz9DSFygp+N99PfJpdxda6Pq6UVFIGzZkxIrtjyp6e5WG1xNOvvyZ+9jVM31iNxAu/
      ajOk8n//5ldk9QQra+vYoxOou862m86yurXO2kc/x5B5Pnj33waO2/9/EHRdbx8ZdZQ8Jv+7
      +oVfV9ZWiQ9kAp936V/h5FgYIJFMsTb/EDWRQE+kCGcygRNja2HsVk96nSfp0FGmSFHbFaN7
      ICV6yOw7+Q09Fnh9v5Xig4Yhj8Fy6oEQgkSkv9CIVdcoJOf2zVsywmGMcJg502DlyRPqjkSN
      JghnBxC+uVSVFPVEiiUpYTqG6klU10WoGoXhcQAaG2vU6nUSu3uY/bZ50OZ3P6Rs1ZfypzV4
      2ziD7t0LQdrH/+xGs8pgNHgdxbs9KPJ0LAwwMz1FfXQApMQtb6KW7uHGx6iIJP1WhBzLoprL
      IZt1cB1GzBxrzSwgEALq2zmsegMzEu591nFw7V71qto2oVqdSjyYAQ6DvZihWiqx+uQZINrD
      87mCvmu7K3g9kZLOJ7wfa6US0S6f13t3Idmbe1RaXSGRDDYnw7EYc5cvAlDO59lYeY7ltrRr
      ZHj0hQnhughFwcrnEK7DVDiEKgTPag2MRg1F0/nJR78lYhr8j3/779t98rZ1eikL3fuZ/f33
      nGnPLPLWHfymTffPfnu/29HuJmLLspDqHmsT3vcI0CDHwgCC3RouepNT6iOq+RyaXOaJfYHn
      Gy0HNjowSGlttXW/YxGJhBgdGULVdbTdGO20r03XnWH58WMmTk9jdMXBrXqDUDRCrVwhFH0R
      rnNUlarPBnRcQaWmEYtYeFkJfi3g1hvgOCgBdqMf3ZrDjITJjA513eSbDN/PgoNvNdxa396j
      D6BLSdYGXcJmIUdkME1kj6xUgGbTIZxIMptOI6Ukt7LK6uJT4qdmCBVXsJ8vUnFN/ubP/4xs
      Os3Tp0+5cOECP/nwX7CbDf7yg/cwTZP5+XlqtVp7X0KtVkNVVeLxOJFIBClb1eCC9if77XXv
      wLt6vU4sFgssie9nhqBaPp3zInfNn/6BFuH+gVIh/HAch7iyhoqNYepYlQIp+wHOxA9wHZfC
      +grjkyNoponaVQMniEAURSE1MUFudZ2Rmamev5d3CtTKFXTDYOzMbOuiEEg/h/cK3/b7hBAI
      0zi0PeN9xFDAkZsHhW271Bs2seiLUGS9UsUJ9c/ujDoq5+s2nmc06BrYbohVCXIPF6TRdNB1
      BXVXQmbHxygXy0jHYUiP8P2//m+oNCxGhlvmg1AUlpaX2bJN7HSSn3z2BX9y7gyXLl1ifX2d
      QqHA6OhoOwGv5QO1Qs2RSKQjQxiCpW530Sr/RhaPIbx1iG7i76aVzc1NVp0aA8n+DJA+Nc5v
      b3zOD9681vO3Y2GApmWhajpNJQqOwIxEMCNhmuopTL1FKOEus+QgUnFneYXp872qP5KIM/Xa
      eVRVZenh477Pq6okHgneMNF+/x4rkh78avkPhVA0wkg6RtmyULtPjJEw03xB/ACKYRBtOGQa
      klxY6TuGeKx3K6VwHCqLz5h743XuzT/hnbffbo9tZnqaf/7sc5pJEyORoC7j/PPiKun5J/zt
      995HURQWFhY4ffp0OwLjzY1XQ6pQKLTe45P8frPG66tX7tK27Y5ttV7ZmO6Vdf8YC8Uijx7P
      s17IM3n10p5za0bCKOFQh0/pZcUeCwOUazXUVIyyGGVbVok669SVBNva6Zdu0242MXQVpU/C
      m7prV2ZGh9l8vszg5HjgfcXtHI29qif4zBUpgfZCl5+gOrPxmru5JgdBoOOlKcQ0H2FKCa5L
      ejhLYbPSwwCGlES6giiubaNGQsQsSa7XTdoTw7NTTK5tc/2rm/z1X/4VQggqlQp37z/g9r27
      lCdnMGLxdv+1aBSnWGD12TNmL1zoSCvwyqx4FcW9Y2C7z3xrDTP43AjPR7Btm6eLSxQrlfb2
      RQEYqtj9Pi/mcTOfo6LC3Ptv9dCIlBJXOijiRZp4dGSAX39xnX/z/T9tJ/4J8RL7AYJQde32
      qu+2foatIxC+h9LWNumhgX3vC8djbC4uUUnEiaWSHZPUrNfZfLbIyOx05y4tOl1zP306zSbV
      QoHE0GDHe/ztVncKBxrDgTWG7WCsrmGN9oliQO+qiJQIwOMLo+Jgh1VcxUdczSJUViDVuZlI
      2d7BUWB0bIxEIoGUku1cjs9Xtmg+28GY7dUalVgcZXdvuHfmrleCvNFotPeDAO36Q92BhH5r
      B1JKdsoF/vHjr3giI0hNB5qtQdfy/LuLw6SHhjrur5bymKHgqJkjbb549jMujL5LItwKjYZj
      UdaEZH1jnbNnzrad8GNhgEaffZkvC8e2kfUq0WSwVPdDCMHkhbMsPXhEKBqhnC9QLRZp1hs0
      yhV0IUhk0j3Plet14rsftDtNIjU82CFVuv+eX9/okWRBOPBKs67RPDUBfebREoKSKkn5gixa
      KESlVGbLCANRrGhAf7UIxCY62ko2nuCwxpI+zffOX2gT5mfzj1EHB0lcNmnqAWZTLMZ6Ps/0
      9DSJRIJSqdSuxOBpAW+3oL+QcVA0rTuqUyqV+E83r/PMHKU7OUGxG6S3NjBHR5BGSzO6joui
      KiiKimM7PRpAFRoD9jhhNYpj2xTWt3BKFS5NTDM7M9sm/lKpdDwMYLkuB18L3R/1UolwNPis
      siAoqko0lWL54WOiqSRDU5OtjFRF4dnXdwKfCelG/5i6772OCyBQxMsF/6PbD6hkzoA4QtaJ
      gKcmnKlD1N3VXqrKdibBve1VoqU8Q6d2Cd0/JqEi/GsipRJNNQrj54lv2KRSrQiSbduUbBep
      qzTHe4UFgFOrkR1raUVd19sOrFe2XErZTjcOOjy7Z0i7WiCXy/Gffn+LhVCwsAspQ4RvfQ7T
      szjZNPVqla2lVQYnxilu57AtC93sZFir3mD7zhKF+Q00F/7ihz9i7s332msQUsp2Kffj0QB2
      y0GL2iXSjS2WI1PII3zwSCrFyt17pEeG0YyDsVZ2bITs2EjPddEn41BTj5wGhbnewIlrONH+
      01hNzdBvLeQwaCqCu2FJzGmFQasKbDU3iY4MU1nfILeySmasN3GuG3UlhRQGyVC5bbI8ePKU
      WjTePzFMSoatOqMjIywtLzM+NtbO5emuGxu04tudIOfZ32vr6/z9z37DdnKyb38bzRqF/+qv
      iO2mwpdyOwxMjBGKhCnld7C7tGaz3qCaLzCSGeDMmTNceu21wMxWb//zkRnAcRy8lCchXRR5
      9EPPhBAYoRCqpmJUykgkViS2b26P/3k4nmS3F3zik2TeukNIwdX2ZiSpvnxBq562hKDk+2LO
      7lzHR0Ypb2+jLS0TH+/dWN/++PGWY1vN7/DG2Kn2PbV6HaH3J4VkbpPvX3mdv//oY5xwhH8r
      ZTsFvl++jxce9bJKvUps/p1fgtYGIVkpsmIMBrfj2qjhUDtaVykU24JOURUc28ZwdjBqS3x9
      r0pEi/La3FnO/Md32k55UN88ZjwyA6yvr2MmWhNb1pOU9eQ+TxwMdrOJ5rqE81sgJUUztOsc
      7Y9KfodIarcfrkttbZnQ0GhfbRCEoLBn9+92sv8h0IeFYbvEizaPGw2sA7YZUTI4DQsHCyMS
      obr6nMTE/n6T6zgYPsKoNhoItX8ahq2o/Or+Q5ThURTg6coqsyPDbUIOKvPuLZKtr693nJPs
      oV6vMzY2hpHMsOL0X1NxUMhv5QjHotR3Fz7bxKu1ok3xxgKh0lN+dOEdJs788EA71rwyiUdi
      ACklC0tLmInDlec4KFxVxQ5HWlEQ9YBdlZJmrUYkmQAhcJsNqouPMTODiEOWF+wX+/9DrAYo
      Lji5IhG3grCCKx7sh0Kz0dNn1/NhFInj2hQ3F9lefczNeJFEJclk6hTpeAx3p4ximHjhXn8b
      ld3qHt6V4m7Up5+G1TSNeDzO48fzmKEwK5tbSAlayEVNuMylzqLpBv/7zz/hbl0Frc+KJeDG
      U6xs5BmbniS/uUV2dGR3/UFSaQrKhTpLpPng1CTRwTf7hs27oSgK4XD46Bpgu1lH0RL73/gS
      kEJQybY2bu+1YttBpEKQGn3hC6jhMNnX3z7WfrmO296TsNvToF7t2YZmdGqPuqFQzBqMRDNo
      AWrbj6i1REWf6LmuqApWvYER9rZVQqVm4kpB051ncfkznI0NhO1w694W5lCKz5//noFQhkTd
      JR+KI4WN4Z4GX1gjXC4R13eIh1p59ZWai66d6jjPuRv1ep2QfZ+bN7/kSy6z2BjAtr9AaS6j
      umdRtEnCCH40f4vl1CB3x2cC2xHiRQVn6bjopsHz5SLP7i9RwWR7e4f1gQGG0rO8MXy4GrVH
      Xgir1mpUFcHLJwXshc7QY3fc2IP/uiMtLLeOqRw9Gc6t1VFCZqBkqpbKrD5dPFr7tk1qKEt5
      pwhSMnZ6BrtpoaX2N/OqWq+z32rT6THzVEWyWZxnpfApSqOGxu66gs9236xts5jfJhsbwdBD
      SBoINFSniaManK1+QTq8TT3cEnTpaJWQlcS23umJbnnfw26WiWurZKJwgRUWGwMoygzSjOAq
      M0hhYpZ2iNarJGvl3miRdBlwnlITSRTlRXW3tY0qdx9sEW7UcIVAuBLDDPPRzQUMXeO16WBf
      oh+OxACmYaAdIc/7MNgvVVlKiUBFE8fjdApda7FgQLw/mkoyfvZoi32u41DczjE8M41jOyzc
      n2dnbZ3UwCAE1BPyQotCCKR4sXnd37fByXGeP3xManwcPRRCCLDdLVZ2PsGVDtLUESEbt+6i
      pbuzSB02t/NMDb2PIIpwXUbzNyllZwkPN6nz4n5NSlT7Oa41CeZEx1GkXg3T9fUi9ZJJDYOF
      enZXiKURIt3u+3Ysyc9fe4daQEg67m4xa31CTSZY37nAx7/5EqfZZPV2gaatoKgarrARqo7V
      bKKFw3x+f5lzk9lDRfiOxACaphFWNfxxgJWdPFLCeDo4nnwcaFoOht5r6wkEag8DvJzF3l2n
      87hzgRRVJbW72qyoKqcunCOZTGKtbaOP9a6Al7e2iaSSaD4/xnZdLNshshsHN0IhZi6c5ctf
      fsKjuooQCpb+GEfdonUaViulICwkI8aL8UkpaTguWDayuo2IDCIVlaWBd5nkYVsLSimRtRqT
      2QwC0OQW8fTrCCHaZ8vt7OxgWRYLm3l++nSIij5JUwbb5RIohYLth6qSYlM9Q62iMHruPKFk
      CttyWL61jrBdhCIQlkXKEO08omKlQb1pEwsfXAge2QcwNZ2yT51qQkHyIkz2siFJb99o0PWt
      rSojQ30c711/Qfru/64gkk2zubTCGL0M0J2aAaCrKnqX06foOq998CYrnz5gw0jhynl0qWJj
      IEXrXuE0cV2JZy1VazVcVUVBUqs/x4icg3ZGlM/0rNWYTKfQd2vD6maYza0tyqUSpmkSj8fZ
      rjT4xeef8YUVwTHCu7kagckcbYxU6qxFQ4jdHRSJhkWy0QT5GmZ5nUgkSqxRaa0AI6k3bcJa
      y0csNppkditcGGETJUB77oUjM8Dc8Aj/y//2n7FR9pS17XQyAaZoMPValwnRRaiubfPV53fa
      JQO9vHrvHWsL0CjkSeyRBy4BWX25iMp+KNXqxPbYlfYy0E0Tq9HAse12sp8fUkpw6qDufRhE
      OBbjdMZgo2yDbGKJzmy5pqKRLxYZSKdwXZfNYgldM7BdyXZTIW67CCERqsoOg4zJZyAdwsqL
      ZLelssuH88tIvcK1qWmMXJ5//t0nuBPTuCMjTCytgF3ei+7bMPXWPu5yRXCuCkMNC10IHEBt
      StJf3UEZ1HCjJqua5FmhSKJWw4rGKGezFMplFCkZz44SNg5H0kdmgIFsFkWPkq8dvExhQrik
      Tu9f7Xk/yGfzDJ5rtdPPSc4/etjzXN0poSshVPHyCRxR8/gWuPyIJ6NQ3YD4aI8D7m7dxNm4
      jjbx54hksA8iJdSbgsc5GwyTzh06uxAKK7kdFCEp1Ru4jku0aVHRbDSnipZbpbC5jW2Gybsu
      eiLEa7FtIvEw9XqdetPi56tpGnqKYrnM31+/zuXZM5QQpMMhwuEQp1KHK2JmVOqMXH9I1FYx
      vf0iSFQtih5p+RguOm++liZXdtB2N9XIao1tu8lw2OC9i2OHFkhHZoBwOMzcWIb1xwfLkDxO
      +Cv0eKHS3JMnlDfWUIRKbGws0ATShInCwRhWt2tYqtkT7ThIUSfPb/D7D/18CSklCi7n4k9w
      dpaQxmXyode7bnJAukgZHHho1GrcuPGAhjlCKToEVhNEGOjVgpbrUlNV9FgEXYIjISRgND3L
      +NAcQoAx1tqIVJeSu5RI2GuUFpZJJKZ5ki9TsdaQuo5imriHKXLVtaKOKxmZX2dENXDsJu7u
      txESVARaSVBym6h1iUxmmRhTqCYGickwiq4j7Ar/w1//kHT88PHIY8kFWtrc4VDO5nFZDb69
      nlJKco8eUlxaoqzsEHWS5B89woz2JstrysGltypbqR66U0dzm9T0/vuc/VDsGrJawI0Pt1dC
      2yHC3QKt3gYNb4N5yFAwRIO6EGhuL9Eqg2+ipM+DFuz/NGp1HldU6k5jd14UhBxC8jTgbt9i
      l/CGJBiITRLZaqI2fEwmBDUS1PQETJ2lIiUZd5tqbo2m9YyB8FmiZiiAzYIRsiSOApbWen+o
      VCNTqrfIfrdgres4GK5EUQVu00E0XBzFYcAocerqG6iqyuzsbLvu//PtLXQN0ofMRDiWXKCm
      7cIBJerLItasUTZ6ibm9H9hqUllfb93rvlC/lZ0it768jRcB8bCxtkXT3Ls+EYCiVTHCRdRQ
      S0xaNYN6JcHdtd4yjWNRlUvXrgAghYa7mwfkSX3XdUG2NoSna2tsaNm2hlIUBdcRbIcvU1m/
      Sci8GDBWBfpUvACIxGOYVpX6bl1VIV1C9gA1bQ3oOh4pgIcH4hMkQgOohcae+2iFEIxnsiQj
      Jku5NaYHh9qFirPODhG3yoaapaEYHS9yaSAwqBud2iJcqmHI1joGqoYiBIriotQaSKFQsyS6
      0FmuVIit5RhNXGVwd39AKBQiFApxMb7/twzCkRngzv2HbFTomdCIrFMVRz890kNN21tqSzc4
      amTGYgycOdNjduQa0Ex2Lih1WssSw1xDN3cQvnEYgOZaNKoTuG6nym3mXyyOSVXHMRO4lvWi
      6KzrEll4TnVmilxoGGVXA7T7bVnUwiMs27NE1ipIWW5FtDr2w0qkK9trFB4DDYyPcuer+xQi
      LyJIoUaJkfxTng6/jsPXwIudbN30n4wMMTf0NiiC0mgIq6Sw16kOQgji4TgXxv+iHbEblTku
      NVqm8Ji9weeh13GEb58CdQS939Gp21gNBxyJUFwUVYBjYSuturKVpks2onN+YpRwJsFAduDY
      gg9HzgW6cf8ZblDq8x4dfJmue7VF+0E1DMxEknou1/GCyEBnSLFc30YRwW0ZqkHTsZBIND2H
      bm4EDkNRLMzIU2qVcyD7T2FPbU1FoXF6tq0rvfMN2ucc7KZADJ2a5M6Xtxmcm+2cq+7OeNs3
      heDul7f4qmSCLzW7ZiZYGH4dhIrC20j5BMkaL/aRga6GGE+fZSR1GlXxrw10vcpxia21asCW
      R1LtYsft+12XlCwjdkt7qY0twloeXdHJqy2zROVFgqLYWkYOjGM5kqfrVSYdFxOQ0sW1BaoQ
      xCJhdF1nYNd8FKaBGjYRx5DK7uHIGuC9K+f51a0lSlbnhFT3lB/HA0GnU5k9f57tu3dplIqc
      UhQ2MxlSs7Odq7imVz1ss6e9huPVy3Qx+hC/B0Wx0PVtrOaLbYyu43TsF/Y2jQcVmQ0WA7sh
      X0WQTsdRVBXzgOeAOUYEGem6Vwjc3VVjQRi4iOAcUCLurHHl1NtEzARKtYHY2AZNQ6ZTrUq9
      XZGj9ON1Yust6W6Wamye60y7tus1lgsuZyZBQVLVs1TVROBGKeE6sL2OSA+xs22xpajkHZcR
      TUWREilaWaAdRbSM1v7e8MTgsYaej8QAQgjOnZ7hf/7bD/hf//Fj7C4/oN9uIEUIFOkGa45D
      oHuxSzNNht54A6fRwBaCAaP3oIp9J8+VaNRRlN7isd1QtXIHA9TKZTYXXphBtuO0bWNXuii7
      1e6QspWzs9tvye7hE16kCNBUQWNzjXohRHJs/xTnoUSSgZrdwdYCSUpx2HFVhtUaa06E1idP
      o8s6sVAaHAeRzyMkYNmgllpMIKFWtVhZKjI2mcAs1dssa5R6iwJUNzdwk+PcCM0Qdhvk1QSu
      0OiuElS3mhiNHWYmY5jWU5xmiGVF464iCDWaJE2j5ZPLF4eOoCpgGmjxCNG5/efiMDiyBlAU
      hSuvnWM8+XsWCvuveigC3h2PM1NaYzE6iKXqfRnlZSCEQDvCyfWxYo1kJU/hQJkcnT5HLJXk
      1IWzHdcsy3qRw7OrEbyS3t4WQs8P6N680aw3uH/rAZGhYbR9DsLThzK4S49AT3WYSk3ZKlZQ
      605H8O6RslPYewyKTX1nlZ1tl1QmTGksTebxGgCl0c7JkVISUiA1NkRheZUSsLP1iFA6Q3mr
      dfKNbDbQwzHqEfiT6BaGIhFIXrNdthppnqkJVAzONm0SmkJMU1B0DXQVDA0tHiH7/ddRzOPc
      fHtMYVBFUTB0Ddh/c7wiIKQJVNk6Psni20pXCHinhHg4jG6oILdbgeg94Lp7m3nebinvkGZv
      l5R3xKymaR1RoJ72pcSKhMiVdlAVlUw82Xf9QTMM3rl6ms9uPmZLS7Z2UCGo7BJ+oauv2q4N
      L1UVkYgjyxVQVWQiDnaVVOlnZHWXwaE0Vvq/pqwkqaciICVW+EV0q7K2imLVOXNuBjMcxjOM
      Ht++j4PC+KWzWI0mTzc2WbAsrobrREMvkuek0+B8tsLz1SR3ohG2HIcPojXGMklUJYoSMohM
      DhE9O4l6zMQPx8QAqqoynIryaCtPt23bLd1tFz5dLsOVIRrqEQd0RFvQsnNI2cTQW9EgFZiw
      BCoGuWYS13xxLplbaeJWLNSBCEIRSAm21VmNuJtd/EeSdvsBB1lIq7suZsSkVi5hxuLUrSYR
      06fdpGz9221LN00unx7h2aN5Tqeg4BrcaGR7k9GkJBV/0Y4bj0EsCl4Zwu07yEaBZgOMqERW
      FrDiZ7FCL76XdF0Ky8vMjWdIZGd6tFMykyKZzaCbBosP5ilHozi5HNKxW2c6CIG7qx31mMI7
      l7OMxob57OEDzv/Ju0yNjaGoGkLTAk/bPC4cmzv9J29dIKvAOVQuo/Km0LiIQjoscdIOdtLB
      1Vsmw2bd4P7tJ0cqmQ0vuZ7mEY0ETU2iay+iRA6SJyGHeyFBqTGG3Uy2oyHWsx3sJ3lkxUJK
      hWZ9EteJ9ra9B4zyes+1cKWKElDoFyBsGITD4VbURAiMbmdaSpTdw5+9f+NxyX+cKHNRz3HZ
      3ObPIyuInlQIwVax3vG7x0TNep38jopEJZVO4NQddrYtmuVyq2bS7jFK5aUFRlNhkgPZQNNs
      YGyERq3Gk7sPCGWyNKUkkkywaAyyaSm4u6ZgTSp8VouRHkmhKSX++z97j9nZWbRwGMXQ/6DE
      D8dVHFcIzo1P8jcTw8w/3wYNXBsMRbAWdkkqsCMlbkSiFBQcofPgYY7Kzudc+OAq6iG3Kr5M
      /6ClsnW72a4fKrrCoQKoKJK6Akidem0Kzc6jGTm06WHcmoNjZLEqQ0j3kOXYgGast/BVbY/C
      vKaucWogS3Vjm2w81dYm7X0AioLTNXcht0EsFqFQbbDhQkJt0sqq8RGS1WBqpHPFVFpNao/u
      kF/fIHvpKsmp/wlZWycTHSVu6xRzORqFApqAwsoyhmMxOtW7Kw2gVq6wNP8UKQRjF8639gls
      mRRrNcquyk93okwnNES1wrKlU5OC4voG+WqNP3373WON8uyHY2EA13VZ/voZowNZqpUaRavI
      aLRJ2VJ5JhVcIAzUHF/CmlB4vuHS/MV1Lv/w7SM5roeBpfe326UQ1IV/SgS2lcG20oCE+g5o
      6UNtrj8qdE1Fc2UP8Xf/7CGnZxiqLCJdyYAu+KKewvUTv5SM2nmmTl9tX3Jsh8bzZ5SezhNS
      FSKqRJhJNMfAVU0MXWHAV22icv0Lzl17M7C/Uko2llZIT02hUke6Dq7UmMpmubW0BICraNxb
      r6KoGvFwiIxlExmewF5b+8bPfj6WL9msNKjmW9vahtIx3hwtcXawzOWRAn+i1Ug0FQbrGlq1
      NxKxXlT58hdf0Nhjf+lREVRV+HAQgALh+J7Syf+Gze0qjeYBDouWEsWVgT555/sPhqZici91
      lY3oFP+yFuNmI9P5vNVgJK6wuHqbRrXK9vMllu/dY2t9C0XTCGcyaPEkwnFI/+Ijwo8784ik
      lMRSSVStl1Btx6FSKCLMEKFoBE00kK5LpW4ylEhxdmQYQzOIptKEYlFMXePdmVneHBpm5f49
      zo+OHfnkyMPiWDSAXX8R/UmnYgybYcolC1VRGQ8ZTG+ZVF2XNRzcri897xlDlQAAIABJREFU
      ou2wXYnz+c+/5Or3XyOSPcSBet53lRIzV6GRPfhe4JdiB00/sOOdSYXamzOS23kK2eC4arwm
      GSg7rKbUnhwZD3uGP4s1pBDYPqfWUgyYuMiUuk5xIUfBSLb7rVl1TCFJGSnUW3fInD9DLBYh
      kX0d6VgIoaDoOkhJ4Xvv4sQ6/RwhBImhQbaWVxkY7yzEtVEsUVpcZvzC+da9kVGEhFikdR7v
      RHqIuDFG3WpSiy3TWFnmfDzB/9/emcVGkl3p+buxZkTu3FlkFcnaupbuKnWrN3W3lta0IGkG
      s8gawJgBxrAHGD8bhv2uF8MvBvziZ4/HgA3DMDRe4GnJgjRjDSRZe6t6rbVrYRV35p6RsV4/
      BCMZmcwkWdWsKlarfqDAYmZkZETwnnvPPec//4nyBbLr65x95pNT5O8XB2Juum10B2MoNZxo
      HCE0FKnTaBaYME08MXjQ1SObAIXAM/jZ371LfWVnhnYoUsL4fnawazNIn37HMUNeV9UGQtyH
      7mnqBtVUx5LaLg2+AxU8TRDuttlLi14g0cPta/LzGYLc4HsvT08ym1e2KNQS6XUodCqcuPgc
      U0fmyb72MtZImeL4GEIRKLqB2ArNSsAvl4gGKFTkSkWqm1XuXruBjKI4IrS+gbe8il0qIrbo
      2hubDn4QxiXOAsJQQVM0sobFiJkln8uiKiqXPvyQcydPdbvTP0ocyApgWCb58SKN1RogqHjT
      VDcEtXpAGCloQrKZpPn7wqJtaW5diKAeZfjF33/EC58LKPXNLhKJpENcpJdBoIAAzW+hRD5e
      5v4KMNJYEAqrMqLfCQtDm/45Yvfa4O37UsIw5sgL0VU1G9RnwDEV7pq7f0cotzX4Ldeh1Kiw
      PDodZ9L3MG7V6yA8lWLQRLQa/O7vvzFUdmU/5athELJ04yaZYhHf87h97Sae62LYduz3qyol
      d41KZoJiwexpIKhr8XhAhqzcu8XdW6uMmuPMT88wf+zY0O98mBAydbdJR78HQafe5urfv4/v
      xBQCr+OxsbSJ4wUsBgE/cp1u3lSVASoR7hBJXUP4XPzsMUbnjyEERDTxlJspAzDRo6NsvHub
      ohGgSZ+6Wt5J4NplbLQ31smOx3W22yzQ+48+NKu1rgqdGXQolbekQ6KIphB9Km+Jr9/32tDf
      Yqy2llk4/1pM4pMRahgQqNq+rtfvuFz+8U/44le/iFxehdneqikhZW9XnV0QBgG3P7zC+PGF
      btuqBxULqNc7/ODtS2QMkz9+60XeuHj8vs9xEDiwFkmZgs0zbz7Hvffv0FitohoaJ/NN/vbq
      Gj9qaT2kgXmWyUiPj8QcwQAvzJM6v/75LS74AeOnZ3CVqyC2NUclLp5yHa1koc3E/Pv7leYq
      5iyeee6T+5zXL73H3HODO5QclF5e8KGOstXxHgTFsMaGunvvhO6glBGj4yOg6yjHZum02izd
      vI2hKMwsLZNZXiWybVbmj9K0rNhlVBVURUFRVVRNRdU0Nu4tsXlvhbH5Y1SWVrpUbDNroxtG
      zEwVIo7bD1lAZOoNtx2QKeSREu7cuQ1PugEAGHaG+RdPxbJ5YUTl9m+4/v5Nor6v2aCIIXzC
      XbYggTC49M49ns2sUFoYcJlCopacna/vF58g1pye8VaXKvzsl9/d9fiFuRIvvvnK/s4dhuid
      Nn7G6spBerUKzl2FZGQtyZBIbHW9kcmPlEaQhFa9Qfn0GRbffY9MLsvVD67FvP0wJDc5xejV
      a+QWl+PjGy2mr3zMjS98nlAIIikJk8iZlEhPoo1PMzF+pOvSAVQXF9nYcNCyOaIgREZBvKIM
      dKFEzw/p+1hjGQI3YGPxMvClfT2fg8aBGgAAgjhEpqmUjz/PyYUlbry7THq5rop8+vChPmcg
      dNaqNfSKgl0qdH1of0uSW9xHaeNBYYfIayBYa+9+HeOt3ZmlQgZY4QYtdQK7XsFsN/CsLK2R
      CaSUaBmTRQXG8nlOTU7sfi4hkFHE1Xfew2u30TIZJs/G1WXp51yo1bZDjkJgeB627+P2FbOP
      e5LxAG6bgqYaUyDa1SqV1TVamByZKDIZOmRkhK9obCoWK5rdm3sYAHflHnqnQbFVxXMdNjc3
      GRkZ3Oj6YeKhBl01VeXP//hrnLtPzcY0fE+jWnVpV+MSRCEEMgzRLRvdfvCN736gREEPvWEQ
      a3Vf6YVhLoGMiKqXieo36CjxvfimSaRq+CnOj2YYeEGAP0SKvB9RJMkV89Q/vkp2a1D1X7db
      6C0hjDSNwNqZ3R4JIBtCIZB4rRa33v2QaKVBNHaM2XKe40GdnPTRkFgy5EjQ5Lhf20m/6INe
      HEEJQ4ximfz4JEtLS/u6t4PGQ8866LrOn//Rl5jMiSFzwu4Pqr5mEEmFaq1Dq1LvhuiEUNAY
      rJH5iSDllvqCJBO0UFP9DpJBlE6syV1qZ7ufG/Z67Rpy8btEd75D2IwHgGflqE3O4NnbA1RV
      FF5dmOPs9O73m6xOqqYydWyWIBIUp6cHrrAbZ87glMtIRSHUdVYvXiAcEIa8bcIH1VXeuXGF
      G7dXODI1z4tjR5iTEUeC1vbfdCuSIIBi6FIOU+WXyf5ACCBCRj5C11FGx6hncjQRjI6O7hp9
      elg4eBdoABbmjvIv/uR3ePvt7/NRBe42t1vovGRe5TfecUAnkuD3SX50mjprH9uMzbWp1jox
      b17TEMEkihi+ZEZRGKsi3KevnwtuU3Yv09Ym2DAv7JBDSSPuRrjdAnRahxkDfrFfeQShsu0b
      b3+PTCk2CCHIaTZKJ0SY+7sXpdFE/59v8zwq6ydO4Q2oKgsti8XPv4HecQkNnSihIMgIISMi
      Cfgey2trLDugTxzDAJYliNAj7FQoCj/uBKQIhIxFkttsG8GmOogvFRcCOTevUXBbHH/mLG9+
      6VV+8847TE09hAltDzwSAwCYnzvGwvFZfvTzD4Bcd9Bsahf4QqmIpapEUlLxPN6r1ailWt/U
      1zK0awaZvM+KkNjS5+QrYxjWwZOmsv49FHzsYJmqeY4wVcQ9KE7eo/lDf4nM7hCFBcTcH8SD
      P9tb6ZT+jo7wyQ/KEkuJ4vhI2+jZ1Our6wSr66iGiXfpEutbA6u/vlikfiah0GOtD1Eryyx6
      I+B7tGoNCoURvOokDT2HoSpQ3+Bcs0Y4N4Vn20R+hBtJ2tZ2Jl7ZuofNZpXRfLnHfZSBj6Kq
      jBYKfOWFC9y8eZOLFy/ex5M7ODwyA1AUhZHxSbzO1e5rzxYKnMr38mumLItR0+RH62tsuNub
      x8BTaG7ES7SvgOJ6YA1nUip7FNEPQ904juL5OOokoTAGJq96Vei2P7vsx//2CyEUyM+lzjXY
      BYiLaXa+rt/awLyyQufFecIUDeTyxganTixg57PMvPJZplK5naXrH1OcnsYwY6MxllfJXr5K
      5bVXCH2XW2//mEAadJQI0CBfJpISrbLMjKlz7CtfJ3fnLub7HyLtLHohH7NsHYdOp9V1UZuG
      ijAERbsQR6i2bi3sOEjPRboum6HA87zHNvjhERoAwOTYKGOmhgwcns+sUiy8SoTANyRODnQX
      Mu24WukzpTJ/u7IycEZ1IpN7l69z/OUXemY+KSVECqqqI4mQDO9XNsw1crRJHG1yX8d2v3MP
      rKy1WF9cwsgYu2qZDisNlVHEoKRXWM4STBeJUjQQKSWeEAR/8DXqW6+l144okhhpTVPbIhwp
      IzSV1gfvI6Wgo/ZOLEmkzm02qL5/CeXCC3SmJsk6DTIdByEEGdsmY8efC1SNHDpLm1W0fCm5
      MDQiqKzz1ql5Zp4/y9TU1CMnv/XjkRrA/LFZ/u2//MdEboPqT77DYjPL9bUOTg58EwITDAki
      kBTRyes6dd/fOcgRLN6pMX26glWO9wECDZ1M7I9uMeAlIQEOD0h9S33fTvdn+/e9P7vhGPz1
      //gNhvB45aVjTBw9gmbo2Pncnt1gkvMMMsKoaNF5LubkJ+9ef+cS0wvzQ43Jczo95/KLBYKL
      zxLUKvib62iqgoyiHZRvIQShnmH5yhWyC6cwCwUapomsV8i0GslB+IZJozRKQdOZj1b4uFJB
      LZQpRC4L9WVefutNxkZGHinnfzc8UgMQQnBn8Q4fXb5COZrl2PQRrGyDu2GbiuZjSpVQDwkI
      iPyIZycsHKnxzpJDOtiiyIDzn13oDv54+Fu9bgoCgYaGRUD74d3U0BBn7xseBj4mP/jZJtZP
      lygAY0dNpmYnGJ0cweu4WLks+ZEytfUNmrUmYRgyPTcD7E03kFLiNFsIBMXx4auM0kdjVqRE
      SvCrm4BEN3RoR90KsTSEEKAb3Lj0HqdffRlV02iWRmkHElVVCPN5IlXrTlhmuYS7fBmx6mBq
      KpjZQzX44REbAMDpU6c4cfw4raUajcUKoyNlRmUJ2W7h+iHvKU1UVcWRDq0wIOZ7iZ6pVpEh
      Vj694dIZFmQVJJGWTxZiG+bqpNP7C0UVXYUrm7vE64XAERlcYHUx5IPFZXR5E4UIRdUoZFXW
      GxAr4cOIfYtjY4LiaJnyxPiuxTjLN24yfnQX2RAvQElFm/RQMlsL8VXB1SB2F1VNQ4QtGKhl
      FF//hl7kg0tXOHvhDJqmEI2MEKUyxAmWqlVaoc+XTx7nrbPn9sXMfdR4LA6YqqpkylnCrZCn
      HwSsNds4usWYnaMoVLKGxlI94p2lDv2h9mJOwSxsl/SJXW4jXgkGKdfd/3UbYQ0t6uWMpu1C
      EftXSI0AKVSkUAmVDAUloChbrDcVAmEQCQ0pNNbbGr++Lfhf3/4FrT2o4q7Twc4Pr4lQWi5h
      Z1upR4tAj8AIJdpWQEHVNZQh6tMQTyNBJs+iKPPR+7e2TjyYlToaBHzz+Rd58/yzWJb1wETL
      h4lHvgJ0YSgoIwZUg1gsdqSMpmkUopBG6KKqGn+4cIT/fWuJe61Oj09rqr0+qtwl+BjvBQa9
      f/8W4Cu5HetI2gCuV4fP/IP6F8SvSY6zRHZLtzNPm6vMbrU02joehUags7a6TqAoJErOIv1T
      CDRdJ/B9jExm4IoVlbNxN4otOBosFhQCRaCG4whNh8BHFcPDuYGZJTBtdKGwWm+ysbTC6PR2
      0EBzQjQvoi5cjpk2b5w6PeRMhwOPbQtu6Dozp48xfm4Gc8Sm6TkYhkYhbzI2kSOSEbqicG6k
      sJWdjRBIFBlSczwaK8vdc0X4Q40gImCQ+7OH5M9ASKFuJa+2NqYyQN1Hwcyw5h1SSjJ42CnR
      WgsPC3dAGafEDSUtL6TlhjQ7Po22R73VodZ0qNXb1Co11JTWUD/cdhsjTXcQgrah4GkCxTSx
      508BYA7ovxbfv6A2fqKbtIsKo1y6sYrvbsmxB5L8sgtXVznR0njtxZf2fDaPG49vBSAeGEY+
      w+TZWSbPziLbLtHtNazQoLy2QRhFPDNhYZbHyZo6o8Us+azND65fojA9nVoVJAEOGhaJ0yOR
      SBkQNZdi0dlMv27mAVy/9NFECAPqGvqjMJZt0W7t3IyHA5ymELXrL5tRhIrAAXICSqZJVNwm
      f+dqN/CsMXyzSOD71NY2Bu4DRBTR2qySye3MCsfGFpE5uoAMQwLvPZyqQ2hsh1dDRaM2dRo3
      15t9960C68trjE6MEjTaFByYHh1lambmkRe4PwgeqwHsQMaArInWcjl/ah4vCHBGLM4ZscBU
      MqhK5RJXF+9yq9kmKo6gZ7NIQnyaCLQtAwiRzQ3Uj34Ohkn47Ouw327z+0QoMjhhr7sxrPvL
      sFnZR2WZEabYBGCVMi46iqKQy+eoV2uw5RBFtk1k99IL3MwYoRa/li2XaK6uDDQAw/Wg0cSe
      31l55XgNKu0VZsqnsOZPYo5Ncvt7PyTK5ZFC4FsF2vkJokGKGnaWn93+mOm1VZ7NFfjM578E
      gSRTejjdow8ah8oAhCJQZsaQDQc1CAgjjyiMoxNJNxUhBGOjo4yPjfFqFHHrzh2uLS+xEkqU
      8iiamXJ4NAN0A2lau3J6+rFx9x6bv/klCIVaZrRXU6cPtboDbG/uhg10p71du9BDC5CwIsps
      UOhWyUkZZ39r1e22UxIFN5JdCfUEvllIvpiNO4vMnZhjEFwrQz0MyQ3IO1hGHsvId6+t1myz
      Nnsekdu7zMgPPKphgNkJ+OofvoX9GOp6PwkOlQFAbASiaEMUYbounVo8CJJZVAjRbS8kpWTu
      6FGOzszQ6XT4ePEuN1fW2RQqmdFxhJUlfO6NePAPCR+2anX8xRVs2+7O3ka9Sm1xmaYHH6Dj
      7/qY7j+y0W8kChERgqDLOxqwgRUql351k8mFuYGrTHNzk7ydIVca3iJomBJf//najSbCjge/
      Kj0ioQ+dBAzNYFzCn77xebIPWeDsYeDQGUCCtJBs8odLBk4+n+/+33VdWq0WlmVx5sRxTkcR
      zVaLq7duc7vZpmNaAwe/2mhQW12jWalx4egxxsfGun63lJLpYoFvf//n+P1aRvcBVcB4TmO5
      MZySAZBR49WhHea69z5oJVmreNTXNihOxOWQDcdBURSypsn6rduc/+yF3a9nHz65lBI7nye6
      VUcplMkE63S0McIdDchjCARvHD3GywvHD12Mfz841AagaRq2bdNs9sfet7XjLSvuItJut+l0
      4nBpPpfjhfPneAGoVCpdleae88/E1VbiSLFbiZSsMEIIjj1znn96dIF/91++x/WN8IFKKEPJ
      roNfETBd0LlX3xm7VzVlq4QxVUcb6Vx7/wYvjMd6nOqWtDqAEoV02g6kXS3AKuS7x2ip1q5e
      J+5H3A+nWmNzeQVhxEbW0o/sSESmUWxe4cWXP/9EDn44xAYAW1Eiw0DTNIJgey/gOE6Py6Jt
      dS4fhHJ5X0L/XaTlSzKZDH/xD77Ef/jvf8flNb/baf0gYBgG07PTFG2TzvIGmxvxJtjK6ZQn
      LHQzzgT7bkhlxcFp+iAUOs42Qzbxt4UQFGePsrq2STq81Vhb4/RzZ7tZc1VRqdcdCgWLH373
      Jyxt5S3yekg7VAmj5BlAdtzDWjjZfSZIyXz7MjezseiVDAOClSUC3WZ2+mCbVjxKqN/61re+
      lfySaNYfFqQJaH6qPkBVVYy+7i9hGOJ53oFVFSXnyZgmr1w4jXAqXFlufqJi+jROnz1NoVhA
      0Q1KpSIdp0OEz5GFPJqhxgEBRaDpKrmSQeBHhI7Liy/Nk0+pzCXPwLQzZOs/xioWsceOkc2Y
      SM+nMFJC03WiMKTR6PCzX97DcDY5Mz/HSEOjKSTfmKuiqypX3DK+YuGrGdxGh+ziTaaX7/Dx
      rXu4K6usNhTctXW81WXCzXWW74XUqyFT46PMTZaeyFXg8Iz2IVAUBdM06XQ6sdrEkJCiYRio
      qnoAOqA7N6lCCN783PP87PLbrHY+ee7QNE0yVrx5TopS8oU8mWLYU1yT/v7RKZuVRhMrbxOG
      KqoaH3vvXgMhYGrShsw4qFmUtXX0ZotyGFK9/jH5XIGinWPWMJi+MI1hqLQrbV6Yn+RcbpST
      pQlaNzY4veGgdwQfmBlC3SZSMyhaSKezRXBLeUzCbRMpBqHf5oMby7xxYQ71qQEcPJK9gGma
      tNtxIsn3faItzfxkwCiKgmEYXVdpP+inNu8G27aZn8ixentnfywAIaM4UrJFT9jlS8n4PmYQ
      4mkqJEoXgYdV3P5zxCSJ7UISVRWMFuLWSoqyzQ41jFgsC6Egx19CeB7CXSGMIkLXw5CS19/4
      LPlUH92kTRORjOnjQvC7FySvPbfIT97+IZfrIYFUqbgOr56a4iuB4PtXK0QpFzAybIQriVCY
      GbW7/c2eNBx6A4DtvYDruoRhSBAEtFotbNvuJsggnlkdx9n3CrBXAqsfrz9/ml/f/iV+X+b3
      5IjgjQsnaLVdQin5xeUlbtfjuoV+HAFeDgKUazdozh9lRdOpVmtUNjexSr2bYSElBROaboQQ
      CrOzBUaCCG1zk6rbwbdM1FYTvdak3ilQmJ0BVUWoKsK2MDMZIseh0Wz2GEA3GpSSLRRCUDox
      y5f/4pu8+1f/jaNHJvjCC+c4slWIr3/7bf7mchWEgqnARAZWTIVsFNJwKzi+j/0EhkEPTBrx
      YUNK2R34na1WpLquk8vlurmBMAxpNpvd9/dCEl7dL01XSsmlDy7zV9/9DW0ZV1Wp0uOff/MV
      jqcyrOsbm/z773yPj9c0iHrnmFeiiBli0wiF4P/oOk4YIhTB3JlSV1F66wuZLulkLZPRkRHe
      OHWGqXwhjg5FERubmzidDmtrq0yMT/CjD9+ncGIBpd2GWg2vVscslXl2/jhHZwc3sxj2XPqD
      Cq12m3/9l3/N5Wrcq+DolIE0BWoUkDENXj53grOTUyyMHFwT60eBQ70JTkMI0e2uKIToukHp
      PrxCCKIoIgiCfa0CaRcorcKw2zVMTYzxytlZsrRYXKtyatLmy69+pifGns3afOb0HFevfEy1
      03s+A0hkf9eAj6WM/WsJmqFiWtvP3zIERydHmJiYoGhnOTd1BHUrG64oCrlsllKxyMyRIxQL
      BRTPp1atUlZ1Wm2Hz55/DqfjcmnxFscnpjD2OUMPega6pvHswjQb9+7QNjWMrB7XNANCzWLp
      Gq2wQyGTIW8ezkl0EJ6YFSBBMvs1m00cJ65HtSwLe6se1XGc7s9Bmc9Bm+RktksMYb+9yzY2
      K1hWBjvFsEwb009/dYm//P6VnvCpACYBS0ruim3x3Py4S6dicORkCU0VWIbC6bkpioU8hqbx
      4uw8o/tomh2GYY8x+r6P0+lQyOd3+dT+UanX+Td/8z28rUKj5FFl1YDnz8wzUSjy+lb49EnA
      4Zzud0F39svluqFPx3EwDAPDMLqvCyFotVoDlNwGFJ3fx2Y4jdGR3XMMzz97hu//8jq3tik9
      SGBlQPVUc11nROtwTvGYOn2C3EgZVVUZsbMsjI5h6/ubvfuzvbqu7+g//KBoNZv8v5/+BC1o
      IVAIFQNfmEgp8IKA5ZWV3i6WTwCeKAPod1l0Xe/G/huNBqVSCV3XuxnkMAy7K0L688POexA5
      hHQBu2EYfOHiAv/p/17riaDsKHKXEks6nBnX+ZNvfoNcbv+dbh4VpJS886tfsnL3LpGiIRRQ
      I49I1eJ/kYGUcmcny0OOx6tJ8YBIiHBpikOyH0gGsaIoFAoFstlszx5hLxyUESR4/aWLfP0z
      U0OpBJoQnMlpvHzU4J/82Z8eysGfYGN9jdvuDVzWYYsep8j4byAVlXYkOFIYTsY7jHiiDCCh
      KLRaLer1ek+0Qkq5w+8XQpDL5cjn82ia1nWfHvU1/87rL3D+CKDszFGYisLxvMVXv/LWY1FH
      vh/kinlcq02rfZ3Q92MlPLH9/O8tNSgrB9/N/WHiiTIAiAdUslHvT4a5rkuj0dhhBAmrdK9w
      50HSKNLnyto2f/TWi6hyp0y6FqyxGqxx4uSJA/nuhwUhBM8//xIXCy+Q2yjTuLFCbdOj1RG0
      WwEb6x53V0Le/eja477U+8ITaQCappHNZrt8oH4j6F8JVFUln89j2zZKikHZj4OgUQw718zY
      DKMZY4cRdrA4c+LYoQ0/p1EeGeEbv/cP+b3Pf40vTpzk9wuzjLd11lY83LZkyla5cv0m66sr
      A5mmhxFPnAHAdmY4l8uRzWYxTbOnZLLdbtNut3sSXbquY9s2pmnuOtj2awT73U8k51JVla+/
      fDKmLaShaGj64R/8CXRd5/XzF3jt6BTTps7r4yVmLIOLo4LTJQURRdy8dpXrlz/E9+IVr39/
      dpjwRBpAAkVRsCyLQqFAsVjshgDDMKTVau1ghyqKQj6fJ5fL9VAo+rGXEdyPwFP6XBfOnaas
      NHqMwI007NyTtXEUEnJHJ2hrcR+Y4wWVghJg+E2MoMXayjKbGxusLt0b+Pn9JiofBZ5oA0iQ
      uEXlcpnsVrIoSZjt9blh2M0I+sOx+5EtlFKSy2b5V//sz/hHXzzByRGBErkohPzq2r2BRTuH
      FaKUJTtaZnysxLVGm3bQQQ+dLS27ODq3sbZKZXMDiCee9ITzuAVx03hy1t49kGx2bdvG8zx8
      38fzvK57lD4uCGIxrmQg7zfzm8YwyfT+c/Ubh6IovPbSRV76zHkq1Qqr1XWuL92h3W73ENYO
      M4SmosyNMzVq01m8Q1RtIKx4UOupge55g3ujHSaJxCeOCrEXoiiiXq93yyNLpdKO4pmEShEE
      AWEYdn3Ufuz1h0q/PyyZNoxjlP6sqqqUSk9eQYmUEtd1+Y//+b+ihH7cGcY2sDImUkpOnT3P
      M+cHt5A9LDg8a9EBIhnMyYa4H0mSrFAoYFnW0MjQXn5q4trslknuP6b/ddM0KRQKT9zgh9iI
      TdNkfu4od5dXCHwXQdyDAEVh5lhv84/D4ven8alxgYbB931c1x24siXh1MRQBqkx7KAt9OF+
      aw/6z6Vp2hOhoDYMQghe/9wrnDo+z42rl2k1muSLRZ69cJFsKqudrMimaR4qY//UGYAQgmw2
      S6PR6IbeEurEoAefsEk9zyMIgu6xCQZRpu93Jht2PtifVMlhxUfvv48XBJx+5hkWFhaYn5/v
      vpd+1kktRxRFmIdMOOtT5wIls0y5XO6yIIMg2DX0lkSQErpEP/orx5Ks8kFd75OKMAyYmJjo
      rq67RcUSkuJhc4M+dZvgBMnMn1SQJXSIYZvNhFyXbKD7kfxh03uF+4ke9dM2IN6LpA3104y9
      VoEHpaR/UnzqVoAESVg0n8+Tz+eJoiguDhlSM5zkEorF4sABmd7oJnuGpB7Bdd0dAzst45IM
      /P3UJnxakfw9hrl8jys0+qnbA/QjIc8JIajX67RarV2LRJJscbVa3THDp9mniVpdUoFVq9XI
      ZrP4vk8mk+nWJ2cyGRqNBoZhUCjsLTb7acZuPKzHhcN1NQ8JCXdI1/VdKRDJsaZpksvldg2N
      Ju/put6tPAvDkEqlEvc4cxx830fXdUzTxPf9Hd+buGVPAhKXMggCPM/r8q2SpKPrugODCIcd
      n9o9QD+SAbqXAaSPb7fbNJvNniRZslQnLo6maURRRK1Ww7KsniX2dFAkAAACvElEQVTe8zyE
      EN0wrGVZPRtFTdMolUqH2giSQe+6bjezm7hz/dG1JDiQvtfDjt8aA3gQSCmp1+s76NX9Azbt
      4+82+0kpe9yAZM9xWA0gmQRarRawXWCURMuSoEF/lCxZRRNeVhIAOMjo2UHhU78H+CRI/pBJ
      Eqc/45vOC+yVJxj02cNKEU6QGEAiO5nsnRKD9TwPw4hrgZPVIZkEOp1O1+1LVPuSn4fJCJ4a
      wB4Y5DL1z3hp7GUE/ce7rtuVdDlsCMOQTCbTLSRKuD+maXap6JmtjpSJO+Q4Dq7r9rBxExcq
      CTAcJiN4agADkB6o6R4Fw8KY6dWhP5w3iCeUzJJCiF2z1Ad5P7Dtz0spe4QCBoUmk2MS5b3k
      847j9Khz91OcdV3vbpSTe/N9v0s6rNfr2Lbd5WA9bjw1gAHoH4xJyHRQLD9Bv1s0yGVK/p8e
      8J1OB9M0DzwZljBcgyDA9/3uIOy/hlwu19NrIcEgg1RVlWKxOJRSkiAdZk6MJtlHSBmLGgRB
      QCaT6fZ22Ks46WEZy1MD2AfSAyeNYRnlYRTo5P3+8wRBcKAGkAyydrs91GAT98TzvPtywe6X
      uySE6O4b0oGEJHyaruNIU1GSn4nrtF9Zx/vFUwPYA4kvu1sUaDfstSJALOOY+NUHgSiKemqi
      +5HOZTzsqF9iAKVSqavnmhAPk2tNuFoJXyiTyXQN7WFf31MD2ANBEPSoyz2Ir542gvSgTAZi
      EATU63UKhcInNoKEc7Mf/n0+n38kbNQk55HkTJI8Svr6EiOAmMJ+EM9iP9hhAE9SbeqjQP/s
      D7tzeAZtaNO/p6NEaV/cdV3q9XrPpvNBkGw69xr8SWa83zV52Oh0Ot3MeWJ8/eodiqLgum7X
      7enXeTrIgEFPIizZqT/FU/y2oMcAnuIpftvw+AOxT/EUjxFPDeApfqvx/wG6ABiKQ6OTWwAA
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
